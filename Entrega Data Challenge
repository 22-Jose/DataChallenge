{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "5ed45ec0",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2025-04-25T05:03:34.203199Z",
     "iopub.status.busy": "2025-04-25T05:03:34.202942Z",
     "iopub.status.idle": "2025-04-25T05:03:38.393845Z",
     "shell.execute_reply": "2025-04-25T05:03:38.392955Z"
    },
    "papermill": {
     "duration": 4.199282,
     "end_time": "2025-04-25T05:03:38.395167",
     "exception": false,
     "start_time": "2025-04-25T05:03:34.195885",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "/kaggle/input/semanalfinal/identificados_semanal.parquet\n",
      "/kaggle/input/mensualfinal/identificados.parquet\n",
      "/kaggle/input/vfinal/Final.parquet\n",
      "/kaggle/input/serie-diaria/municipios_diaria_SinConc.parquet\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "import pandas as pd \n",
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "import os\n",
    "for dirname, _, filenames in os.walk('/kaggle/input'):\n",
    "    for filename in filenames:\n",
    "        print(os.path.join(dirname, filename))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "ce1267b0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-25T05:03:38.407848Z",
     "iopub.status.busy": "2025-04-25T05:03:38.407502Z",
     "iopub.status.idle": "2025-04-25T05:03:43.344270Z",
     "shell.execute_reply": "2025-04-25T05:03:43.343421Z"
    },
    "papermill": {
     "duration": 4.944344,
     "end_time": "2025-04-25T05:03:43.345661",
     "exception": false,
     "start_time": "2025-04-25T05:03:38.401317",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Nombre_Municipio_IPS</th>\n",
       "      <th>Nombre_Departamento_IPS</th>\n",
       "      <th>Nombre_Municipio_Establecimiento</th>\n",
       "      <th>Nombre_Departamento_Establecimiento</th>\n",
       "      <th>FECHA_ATENCION</th>\n",
       "      <th>Concepto_Factura_Desc</th>\n",
       "      <th>Cantidad</th>\n",
       "      <th>Geogra_Municipio_Id</th>\n",
       "      <th>MUNICIPIO</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>MEDELLIN</td>\n",
       "      <td>ANTIOQUIA</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-07-12 06:20:00</td>\n",
       "      <td>MSI -MEDICO SEGUIMIENTO INTEGRAL</td>\n",
       "      <td>1.0</td>\n",
       "      <td>586</td>\n",
       "      <td>BOGOTA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>MEDELLIN</td>\n",
       "      <td>ANTIOQUIA</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-06-18 11:08:00</td>\n",
       "      <td>SESIONES DE FISIOTERAPIA</td>\n",
       "      <td>2.0</td>\n",
       "      <td>586</td>\n",
       "      <td>BOGOTA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>BOGOTA</td>\n",
       "      <td>BOGOTA D.C.</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-03-05 07:20:00</td>\n",
       "      <td>CONSULTA ORTOPEDISTA</td>\n",
       "      <td>1.0</td>\n",
       "      <td>586</td>\n",
       "      <td>BOGOTA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>POPAYAN</td>\n",
       "      <td>CAUCA</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-10-05 10:03:00</td>\n",
       "      <td>CONSULTA NO PROGRAMADA</td>\n",
       "      <td>1.0</td>\n",
       "      <td>834</td>\n",
       "      <td>SANTIAGO DE CALI</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>SANTIAGO DE CALI</td>\n",
       "      <td>VALLE DEL CAUCA</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-06-25 07:13:00</td>\n",
       "      <td>RADIOGRAFIA</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2546</td>\n",
       "      <td>GUACARI</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11716411</th>\n",
       "      <td>MEDELLIN</td>\n",
       "      <td>ANTIOQUIA</td>\n",
       "      <td>MEDELLIN</td>\n",
       "      <td>ANTIOQUIA</td>\n",
       "      <td>2024-10-01 12:00:00</td>\n",
       "      <td>CONSULTA ORTOPEDISTA</td>\n",
       "      <td>1.0</td>\n",
       "      <td>586</td>\n",
       "      <td>BOGOTA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11716412</th>\n",
       "      <td>MEDELLIN</td>\n",
       "      <td>ANTIOQUIA</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2024-12-17 20:10:30</td>\n",
       "      <td>CALIFICACIÓN DE ORIGEN AT</td>\n",
       "      <td>1.0</td>\n",
       "      <td>586</td>\n",
       "      <td>BOGOTA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11716413</th>\n",
       "      <td>MEDELLIN</td>\n",
       "      <td>ANTIOQUIA</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2024-10-02 00:00:00</td>\n",
       "      <td>SESIONES DE FISIOTERAPIA</td>\n",
       "      <td>2.0</td>\n",
       "      <td>586</td>\n",
       "      <td>BOGOTA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11716414</th>\n",
       "      <td>BOGOTA</td>\n",
       "      <td>HUILA</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2024-11-07 00:00:00</td>\n",
       "      <td>CONSULTA PSIQUIATRIA TELEMEDICINA (L)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4584</td>\n",
       "      <td>NEIVA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11716415</th>\n",
       "      <td>BUCARAMANGA</td>\n",
       "      <td>SANTANDER</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2024-10-01 15:23:00</td>\n",
       "      <td>SESIONES DE FISIOTERAPIA</td>\n",
       "      <td>10.0</td>\n",
       "      <td>3875</td>\n",
       "      <td>LEBRIJA</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>11716416 rows × 9 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Nombre_Municipio_IPS Nombre_Departamento_IPS  \\\n",
       "0                    MEDELLIN               ANTIOQUIA   \n",
       "1                    MEDELLIN               ANTIOQUIA   \n",
       "2                      BOGOTA             BOGOTA D.C.   \n",
       "3                     POPAYAN                   CAUCA   \n",
       "4            SANTIAGO DE CALI         VALLE DEL CAUCA   \n",
       "...                       ...                     ...   \n",
       "11716411             MEDELLIN               ANTIOQUIA   \n",
       "11716412             MEDELLIN               ANTIOQUIA   \n",
       "11716413             MEDELLIN               ANTIOQUIA   \n",
       "11716414               BOGOTA                   HUILA   \n",
       "11716415          BUCARAMANGA               SANTANDER   \n",
       "\n",
       "         Nombre_Municipio_Establecimiento Nombre_Departamento_Establecimiento  \\\n",
       "0                                       ?                                   ?   \n",
       "1                                       ?                                   ?   \n",
       "2                                       ?                                   ?   \n",
       "3                                       ?                                   ?   \n",
       "4                                       ?                                   ?   \n",
       "...                                   ...                                 ...   \n",
       "11716411                         MEDELLIN                           ANTIOQUIA   \n",
       "11716412                                ?                                   ?   \n",
       "11716413                                ?                                   ?   \n",
       "11716414                                ?                                   ?   \n",
       "11716415                                ?                                   ?   \n",
       "\n",
       "              FECHA_ATENCION                  Concepto_Factura_Desc  Cantidad  \\\n",
       "0        2019-07-12 06:20:00       MSI -MEDICO SEGUIMIENTO INTEGRAL       1.0   \n",
       "1        2019-06-18 11:08:00               SESIONES DE FISIOTERAPIA       2.0   \n",
       "2        2019-03-05 07:20:00                   CONSULTA ORTOPEDISTA       1.0   \n",
       "3        2019-10-05 10:03:00                 CONSULTA NO PROGRAMADA       1.0   \n",
       "4        2019-06-25 07:13:00                            RADIOGRAFIA       1.0   \n",
       "...                      ...                                    ...       ...   \n",
       "11716411 2024-10-01 12:00:00                   CONSULTA ORTOPEDISTA       1.0   \n",
       "11716412 2024-12-17 20:10:30              CALIFICACIÓN DE ORIGEN AT       1.0   \n",
       "11716413 2024-10-02 00:00:00               SESIONES DE FISIOTERAPIA       2.0   \n",
       "11716414 2024-11-07 00:00:00  CONSULTA PSIQUIATRIA TELEMEDICINA (L)       1.0   \n",
       "11716415 2024-10-01 15:23:00               SESIONES DE FISIOTERAPIA      10.0   \n",
       "\n",
       "          Geogra_Municipio_Id         MUNICIPIO  \n",
       "0                         586            BOGOTA  \n",
       "1                         586            BOGOTA  \n",
       "2                         586            BOGOTA  \n",
       "3                         834  SANTIAGO DE CALI  \n",
       "4                        2546           GUACARI  \n",
       "...                       ...               ...  \n",
       "11716411                  586            BOGOTA  \n",
       "11716412                  586            BOGOTA  \n",
       "11716413                  586            BOGOTA  \n",
       "11716414                 4584             NEIVA  \n",
       "11716415                 3875           LEBRIJA  \n",
       "\n",
       "[11716416 rows x 9 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_parquet(\"/kaggle/input/vfinal/Final.parquet\")\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "ce90282a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-25T05:03:43.358700Z",
     "iopub.status.busy": "2025-04-25T05:03:43.358447Z",
     "iopub.status.idle": "2025-04-25T05:03:43.362783Z",
     "shell.execute_reply": "2025-04-25T05:03:43.362182Z"
    },
    "papermill": {
     "duration": 0.011983,
     "end_time": "2025-04-25T05:03:43.363916",
     "exception": false,
     "start_time": "2025-04-25T05:03:43.351933",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Nombre_Municipio_IPS', 'Nombre_Departamento_IPS',\n",
       "       'Nombre_Municipio_Establecimiento',\n",
       "       'Nombre_Departamento_Establecimiento', 'FECHA_ATENCION',\n",
       "       'Concepto_Factura_Desc', 'Cantidad', 'Geogra_Municipio_Id',\n",
       "       'MUNICIPIO'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6814796b",
   "metadata": {
    "papermill": {
     "duration": 0.005705,
     "end_time": "2025-04-25T05:03:43.375619",
     "exception": false,
     "start_time": "2025-04-25T05:03:43.369914",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Comenzamos con el Proceso de limpieza de los datos."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "0d9966bd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-25T05:03:43.387992Z",
     "iopub.status.busy": "2025-04-25T05:03:43.387783Z",
     "iopub.status.idle": "2025-04-25T05:03:43.413469Z",
     "shell.execute_reply": "2025-04-25T05:03:43.412603Z"
    },
    "papermill": {
     "duration": 0.033175,
     "end_time": "2025-04-25T05:03:43.414664",
     "exception": false,
     "start_time": "2025-04-25T05:03:43.381489",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 11716416 entries, 0 to 11716415\n",
      "Data columns (total 9 columns):\n",
      " #   Column                               Dtype         \n",
      "---  ------                               -----         \n",
      " 0   Nombre_Municipio_IPS                 object        \n",
      " 1   Nombre_Departamento_IPS              object        \n",
      " 2   Nombre_Municipio_Establecimiento     object        \n",
      " 3   Nombre_Departamento_Establecimiento  object        \n",
      " 4   FECHA_ATENCION                       datetime64[ns]\n",
      " 5   Concepto_Factura_Desc                object        \n",
      " 6   Cantidad                             float64       \n",
      " 7   Geogra_Municipio_Id                  int64         \n",
      " 8   MUNICIPIO                            object        \n",
      "dtypes: datetime64[ns](1), float64(1), int64(1), object(6)\n",
      "memory usage: 804.5+ MB\n"
     ]
    }
   ],
   "source": [
    "#Para ver variables categoricas y numericas\n",
    "df.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8061059d",
   "metadata": {
    "papermill": {
     "duration": 0.006609,
     "end_time": "2025-04-25T05:03:43.427537",
     "exception": false,
     "start_time": "2025-04-25T05:03:43.420928",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "1. Verificamos los valores Nulos"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "791ba3a0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-25T05:03:43.440680Z",
     "iopub.status.busy": "2025-04-25T05:03:43.440483Z",
     "iopub.status.idle": "2025-04-25T05:03:46.374621Z",
     "shell.execute_reply": "2025-04-25T05:03:46.373792Z"
    },
    "papermill": {
     "duration": 2.942116,
     "end_time": "2025-04-25T05:03:46.375894",
     "exception": false,
     "start_time": "2025-04-25T05:03:43.433778",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Nombre_Municipio_IPS                   3\n",
       "Nombre_Departamento_IPS                3\n",
       "Nombre_Municipio_Establecimiento       3\n",
       "Nombre_Departamento_Establecimiento    3\n",
       "FECHA_ATENCION                         6\n",
       "Concepto_Factura_Desc                  3\n",
       "Cantidad                               0\n",
       "Geogra_Municipio_Id                    0\n",
       "MUNICIPIO                              0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5e8bfd98",
   "metadata": {
    "papermill": {
     "duration": 0.006081,
     "end_time": "2025-04-25T05:03:46.388570",
     "exception": false,
     "start_time": "2025-04-25T05:03:46.382489",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Esta verificacion de datos nulos puede ser un poco engañosa, pues en el dataset hay datos faltantes disfrazados a los que tambien se les eaplicara un tratamiento especial."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6c3a0300",
   "metadata": {
    "papermill": {
     "duration": 0.006041,
     "end_time": "2025-04-25T05:03:46.400723",
     "exception": false,
     "start_time": "2025-04-25T05:03:46.394682",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "2. Revisar valores únicos y consistencia en texto\n",
    "Esto es útil para detectar errores de escritura o inconsistencias en nombres de municipios o departamentos:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "975730e1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-25T05:03:46.413989Z",
     "iopub.status.busy": "2025-04-25T05:03:46.413741Z",
     "iopub.status.idle": "2025-04-25T05:03:46.836966Z",
     "shell.execute_reply": "2025-04-25T05:03:46.835869Z"
    },
    "papermill": {
     "duration": 0.43151,
     "end_time": "2025-04-25T05:03:46.838371",
     "exception": false,
     "start_time": "2025-04-25T05:03:46.406861",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Nombre_Municipio_IPS\n",
      "MEDELLIN            6704015\n",
      "BOGOTA              1337323\n",
      "SANTIAGO DE CALI     552647\n",
      "BARRANQUILLA         446907\n",
      "BUCARAMANGA          267558\n",
      "                     ...   \n",
      "PAIME                     1\n",
      "COVARACHIA                1\n",
      "SAN JOSÉ DE URÉ           1\n",
      "UMBITA                    1\n",
      "ATRATO                    1\n",
      "Name: count, Length: 1085, dtype: int64\n",
      "Nombre_Departamento_IPS\n",
      "ANTIOQUIA                   6680292\n",
      "BOGOTA D.C.                 1164060\n",
      "VALLE DEL CAUCA              826816\n",
      "ATLANTICO                    409661\n",
      "?                            380376\n",
      "SANTANDER                    317849\n",
      "RISARALDA                    281474\n",
      "CUNDINAMARCA                 271573\n",
      "META                         192169\n",
      "CALDAS                       187807\n",
      "NORTE DE SANTANDER           125730\n",
      "HUILA                        110273\n",
      "MAGDALENA                    107246\n",
      "CESAR                         87132\n",
      "CORDOBA                       87048\n",
      "QUINDIO                       81569\n",
      "BOLIVAR                       77094\n",
      "TOLIMA                        70942\n",
      "NARIÑO                        42835\n",
      "BOYACA                        40661\n",
      "CAUCA                         35029\n",
      "CASANARE                      33402\n",
      " SEVILLA                      27941\n",
      "SUCRE                         23801\n",
      "SAN ANDRES Y PROVIDENCIA      19835\n",
      "GUAJIRA                       10892\n",
      "CAQUETA                        8823\n",
      "ARAUCA                         5355\n",
      "GUAVIARE                       3396\n",
      "PUTUMAYO                       2568\n",
      "CHOCO                          2151\n",
      "VAUPES                          258\n",
      "GUAINIA                         194\n",
      "AMAZONAS                        158\n",
      "None                              3\n",
      "Nombre_Departamento_IPS           3\n",
      "Name: count, dtype: int64\n",
      "Concepto_Factura_Desc\n",
      "MEDICAMENTOS AMBULATORIOS                   1662060\n",
      "CALIFICACIÓN DE ORIGEN AT                   1338989\n",
      "MSI -MEDICO SEGUIMIENTO INTEGRAL            1329373\n",
      "SESIONES DE FISIOTERAPIA                    1226561\n",
      "CONSULTA ORTOPEDISTA                         573559\n",
      "                                             ...   \n",
      "SEG  ADAPTACIÓN RECONVERSION MANO OBRA(L          1\n",
      "CAMA DE ACOMPAÑANTE CON ALIMENTACIÓN              1\n",
      "CALIFICACION DE ORIGEN EL TELEMEDICIN(L)          1\n",
      "VAL INTERDISCIP REHABIL REC MANO OBRA(L)          1\n",
      "SEGUIMIENTO GIPAC (ALTA COMPLEJIDAD) (L)          1\n",
      "Name: count, Length: 423, dtype: int64\n"
     ]
    }
   ],
   "source": [
    "print(df['Nombre_Municipio_IPS'].value_counts(dropna=False))\n",
    "print(df['Nombre_Departamento_IPS'].value_counts(dropna=False))\n",
    "print(df['Concepto_Factura_Desc'].value_counts(dropna=False))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bddabe87",
   "metadata": {
    "papermill": {
     "duration": 0.006313,
     "end_time": "2025-04-25T05:03:46.851162",
     "exception": false,
     "start_time": "2025-04-25T05:03:46.844849",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "3. Estandarizar nombres de texto (eliminamos los espacios innecesario y ademas pasamos todo a mayusculas)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "d2eccbf0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-25T05:03:46.864621Z",
     "iopub.status.busy": "2025-04-25T05:03:46.864398Z",
     "iopub.status.idle": "2025-04-25T05:04:48.188587Z",
     "shell.execute_reply": "2025-04-25T05:04:48.187856Z"
    },
    "papermill": {
     "duration": 61.33299,
     "end_time": "2025-04-25T05:04:48.190360",
     "exception": false,
     "start_time": "2025-04-25T05:03:46.857370",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Limpiar y estandarizar texto: mayúsculas, sin espacios al inicio/fin, y con guiones bajos en vez de espacios internos\n",
    "cols_to_clean = [\n",
    "    'Nombre_Municipio_IPS',\n",
    "    'Nombre_Departamento_IPS',\n",
    "    'Concepto_Factura_Desc',\n",
    "    'MUNICIPIO'\n",
    "]\n",
    "\n",
    "# Estandarización de texto: mayúsculas, sin espacios, guiones bajos\n",
    "for col in cols_to_clean:\n",
    "    df[col] = df[col].astype(str).str.upper().str.strip().str.replace(' ', '_')\n",
    "\n",
    "# Reemplazo de valores no válidos o mal cargados por NaN\n",
    "df[cols_to_clean] = df[cols_to_clean].replace(\n",
    "    r'^\\s*$|^NONE$|^\\?$|^SIN_DATOS$|^NOMBRE_.*$', \n",
    "    np.nan,\n",
    "    regex=True\n",
    ")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "c94bb626",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-25T05:04:48.206494Z",
     "iopub.status.busy": "2025-04-25T05:04:48.206232Z",
     "iopub.status.idle": "2025-04-25T05:04:48.227181Z",
     "shell.execute_reply": "2025-04-25T05:04:48.226331Z"
    },
    "papermill": {
     "duration": 0.030574,
     "end_time": "2025-04-25T05:04:48.228524",
     "exception": false,
     "start_time": "2025-04-25T05:04:48.197950",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Nombre_Municipio_IPS</th>\n",
       "      <th>Nombre_Departamento_IPS</th>\n",
       "      <th>Nombre_Municipio_Establecimiento</th>\n",
       "      <th>Nombre_Departamento_Establecimiento</th>\n",
       "      <th>FECHA_ATENCION</th>\n",
       "      <th>Concepto_Factura_Desc</th>\n",
       "      <th>Cantidad</th>\n",
       "      <th>Geogra_Municipio_Id</th>\n",
       "      <th>MUNICIPIO</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>MEDELLIN</td>\n",
       "      <td>ANTIOQUIA</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-07-12 06:20:00</td>\n",
       "      <td>MSI_-MEDICO_SEGUIMIENTO_INTEGRAL</td>\n",
       "      <td>1.0</td>\n",
       "      <td>586</td>\n",
       "      <td>BOGOTA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>MEDELLIN</td>\n",
       "      <td>ANTIOQUIA</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-06-18 11:08:00</td>\n",
       "      <td>SESIONES_DE_FISIOTERAPIA</td>\n",
       "      <td>2.0</td>\n",
       "      <td>586</td>\n",
       "      <td>BOGOTA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>BOGOTA</td>\n",
       "      <td>BOGOTA_D.C.</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-03-05 07:20:00</td>\n",
       "      <td>CONSULTA_ORTOPEDISTA</td>\n",
       "      <td>1.0</td>\n",
       "      <td>586</td>\n",
       "      <td>BOGOTA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>POPAYAN</td>\n",
       "      <td>CAUCA</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-10-05 10:03:00</td>\n",
       "      <td>CONSULTA_NO_PROGRAMADA</td>\n",
       "      <td>1.0</td>\n",
       "      <td>834</td>\n",
       "      <td>SANTIAGO_DE_CALI</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>SANTIAGO_DE_CALI</td>\n",
       "      <td>VALLE_DEL_CAUCA</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-06-25 07:13:00</td>\n",
       "      <td>RADIOGRAFIA</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2546</td>\n",
       "      <td>GUACARI</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>MANIZALES</td>\n",
       "      <td>CALDAS</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-02-20 07:57:00</td>\n",
       "      <td>URGENCIAS_MEDICO_GENERAL</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4192</td>\n",
       "      <td>MANIZALES</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>PEREIRA</td>\n",
       "      <td>RISARALDA</td>\n",
       "      <td>PEREIRA</td>\n",
       "      <td>RISARALDA</td>\n",
       "      <td>2019-08-26 06:09:00</td>\n",
       "      <td>MEDICAMENTOS_AMBULATORIOS</td>\n",
       "      <td>1.0</td>\n",
       "      <td>657</td>\n",
       "      <td>BUCARAMANGA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>MEDELLIN</td>\n",
       "      <td>ANTIOQUIA</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-06-25 15:40:00</td>\n",
       "      <td>SESIONES_DE_FISIOTERAPIA</td>\n",
       "      <td>2.0</td>\n",
       "      <td>586</td>\n",
       "      <td>BOGOTA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>VILLAVICENCIO</td>\n",
       "      <td>META</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-03-07 15:00:00</td>\n",
       "      <td>RNM_-_RESONANCIA_NUCLEAR_MAGNETICA</td>\n",
       "      <td>1.0</td>\n",
       "      <td>7366</td>\n",
       "      <td>ACACIAS</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>MEDELLIN</td>\n",
       "      <td>ANTIOQUIA</td>\n",
       "      <td>MEDELLIN</td>\n",
       "      <td>ANTIOQUIA</td>\n",
       "      <td>2019-08-13 00:00:00</td>\n",
       "      <td>MEDICAMENTOS_AMBULATORIOS</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4292</td>\n",
       "      <td>MEDELLIN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>SANTIAGO_DE_CALI</td>\n",
       "      <td>VALLE_DEL_CAUCA</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-05-17 13:00:00</td>\n",
       "      <td>ECOGRAFIA_-_ULTRASONOGRAFIA_(L)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>834</td>\n",
       "      <td>SANTIAGO_DE_CALI</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>GRANADA</td>\n",
       "      <td>META</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-03-11 13:44:00</td>\n",
       "      <td>CONSULTA_ORTOPEDISTA</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2525</td>\n",
       "      <td>GRANADA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>MEDELLIN</td>\n",
       "      <td>ANTIOQUIA</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-07-09 14:00:00</td>\n",
       "      <td>CONSULTA_ORTOPEDISTA</td>\n",
       "      <td>1.0</td>\n",
       "      <td>586</td>\n",
       "      <td>BOGOTA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>MEDELLIN</td>\n",
       "      <td>ANTIOQUIA</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-11-20 00:00:00</td>\n",
       "      <td>SESIONES_DE_FISIOTERAPIA</td>\n",
       "      <td>2.0</td>\n",
       "      <td>586</td>\n",
       "      <td>BOGOTA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>MEDELLIN</td>\n",
       "      <td>ANTIOQUIA</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-12-04 14:01:00</td>\n",
       "      <td>SESIONES_DE_FISIOTERAPIA</td>\n",
       "      <td>2.0</td>\n",
       "      <td>4292</td>\n",
       "      <td>MEDELLIN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>BARRANQUILLA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-11-06 00:00:00</td>\n",
       "      <td>CONSULTA_ORTOPEDISTA</td>\n",
       "      <td>1.0</td>\n",
       "      <td>427</td>\n",
       "      <td>BARRANQUILLA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>BOGOTA</td>\n",
       "      <td>BOGOTA_D.C.</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-12-10 07:00:00</td>\n",
       "      <td>CONSULTA_CIRUGIA_PLASTICA</td>\n",
       "      <td>1.0</td>\n",
       "      <td>586</td>\n",
       "      <td>BOGOTA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>SANTIAGO_DE_CALI</td>\n",
       "      <td>VALLE_DEL_CAUCA</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-08-06 13:58:00</td>\n",
       "      <td>TERAPIA_NEURAL_(L)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>6505</td>\n",
       "      <td>SANTANDER_DE_QUILICHAO</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>PUERTO_ASIS</td>\n",
       "      <td>PUTUMAYO</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-11-06 14:41:00</td>\n",
       "      <td>LABORATORIO_CLÍNICO_AMBULATORIO</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5285</td>\n",
       "      <td>PUERTO_ASIS</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>MEDELLIN</td>\n",
       "      <td>CUNDINAMARCA</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-08-13 11:50:00</td>\n",
       "      <td>CONSULTA_EXTERNA_PREFERENTE</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4138</td>\n",
       "      <td>MADRID</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>CERETE</td>\n",
       "      <td>NaN</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-01-09 11:00:00</td>\n",
       "      <td>MSI_-MEDICO_SEGUIMIENTO_INTEGRAL</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1093</td>\n",
       "      <td>CERETE</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>MEDELLIN</td>\n",
       "      <td>ANTIOQUIA</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-11-19 00:00:00</td>\n",
       "      <td>MSI_-MEDICO_SEGUIMIENTO_INTEGRAL</td>\n",
       "      <td>1.0</td>\n",
       "      <td>586</td>\n",
       "      <td>BOGOTA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>BOGOTA</td>\n",
       "      <td>BOGOTA_D.C.</td>\n",
       "      <td>BOGOTA</td>\n",
       "      <td>BOGOTA D.C.</td>\n",
       "      <td>2019-02-12 13:22:00</td>\n",
       "      <td>MEDICAMENTOS_AMBULATORIOS</td>\n",
       "      <td>1.0</td>\n",
       "      <td>586</td>\n",
       "      <td>BOGOTA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>MEDELLIN</td>\n",
       "      <td>ANTIOQUIA</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-02-20 09:00:00</td>\n",
       "      <td>CONSULTA_ORTOPEDISTA</td>\n",
       "      <td>1.0</td>\n",
       "      <td>586</td>\n",
       "      <td>BOGOTA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>MEDELLIN</td>\n",
       "      <td>ANTIOQUIA</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-10-23 12:40:00</td>\n",
       "      <td>MSI_-MEDICO_SEGUIMIENTO_INTEGRAL</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4292</td>\n",
       "      <td>MEDELLIN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>MEDELLIN</td>\n",
       "      <td>ANTIOQUIA</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-09-24 00:00:00</td>\n",
       "      <td>MSI_-MEDICO_SEGUIMIENTO_INTEGRAL</td>\n",
       "      <td>1.0</td>\n",
       "      <td>586</td>\n",
       "      <td>BOGOTA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>SANTIAGO_DE_CALI</td>\n",
       "      <td>VALLE_DEL_CAUCA</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-07-03 12:48:00</td>\n",
       "      <td>RADIOGRAFIA</td>\n",
       "      <td>1.0</td>\n",
       "      <td>7242</td>\n",
       "      <td>YUMBO</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>MEDELLIN</td>\n",
       "      <td>ANTIOQUIA</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-06-20 15:10:00</td>\n",
       "      <td>SESIONES_DE_FISIOTERAPIA</td>\n",
       "      <td>2.0</td>\n",
       "      <td>4292</td>\n",
       "      <td>MEDELLIN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>MEDELLIN</td>\n",
       "      <td>ANTIOQUIA</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-05-08 00:00:00</td>\n",
       "      <td>SESIONES_DE_FISIOTERAPIA</td>\n",
       "      <td>2.0</td>\n",
       "      <td>14</td>\n",
       "      <td>AGUAZUL</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>BOGOTA</td>\n",
       "      <td>BOGOTA_D.C.</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-08-30 11:00:00</td>\n",
       "      <td>CONSULTA_MEDICINA_DEL_DOLOR</td>\n",
       "      <td>1.0</td>\n",
       "      <td>586</td>\n",
       "      <td>BOGOTA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>MEDELLIN</td>\n",
       "      <td>ANTIOQUIA</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-06-04 15:10:00</td>\n",
       "      <td>MSI_-MEDICO_SEGUIMIENTO_INTEGRAL</td>\n",
       "      <td>1.0</td>\n",
       "      <td>586</td>\n",
       "      <td>BOGOTA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>BUCARAMANGA</td>\n",
       "      <td>SANTANDER</td>\n",
       "      <td>BUCARAMANGA</td>\n",
       "      <td>SANTANDER</td>\n",
       "      <td>2019-06-04 12:55:00</td>\n",
       "      <td>ORTESIS_Y_LINEA_BLANDA</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3391</td>\n",
       "      <td>LA_MONTAÑITA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>MEDELLIN</td>\n",
       "      <td>ANTIOQUIA</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-12-27 00:00:00</td>\n",
       "      <td>CONSULTA_NO_PROGRAMADA</td>\n",
       "      <td>1.0</td>\n",
       "      <td>6636</td>\n",
       "      <td>SOACHA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>VALLEDUPAR</td>\n",
       "      <td>NaN</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-07-10 08:48:00</td>\n",
       "      <td>CONSULTA_ORTOPEDISTA</td>\n",
       "      <td>1.0</td>\n",
       "      <td>7054</td>\n",
       "      <td>VALLEDUPAR</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>MEDELLIN</td>\n",
       "      <td>ANTIOQUIA</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-10-08 08:40:00</td>\n",
       "      <td>CONSULTA_ORTOPEDISTA</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4292</td>\n",
       "      <td>MEDELLIN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>MEDELLIN</td>\n",
       "      <td>ANTIOQUIA</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-10-10 01:56:00</td>\n",
       "      <td>RADIOGRAFIA</td>\n",
       "      <td>1.0</td>\n",
       "      <td>834</td>\n",
       "      <td>SANTIAGO_DE_CALI</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>BARRANQUILLA</td>\n",
       "      <td>ATLANTICO</td>\n",
       "      <td>BARRANQUILLA</td>\n",
       "      <td>ATLANTICO</td>\n",
       "      <td>2019-07-10 11:03:50</td>\n",
       "      <td>MEDICAMENTOS_AMBULATORIOS</td>\n",
       "      <td>1.0</td>\n",
       "      <td>3976</td>\n",
       "      <td>LORICA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>PEREIRA</td>\n",
       "      <td>RISARALDA</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-12-12 19:08:00</td>\n",
       "      <td>URGENCIAS_ORTOPEDISTA</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1559</td>\n",
       "      <td>DOSQUEBRADAS</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>MEDELLIN</td>\n",
       "      <td>ANTIOQUIA</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-06-05 09:00:00</td>\n",
       "      <td>TAC_-_TOMOGRAFIA</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4292</td>\n",
       "      <td>MEDELLIN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>MEDELLIN</td>\n",
       "      <td>ANTIOQUIA</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-10-01 07:40:00</td>\n",
       "      <td>MSI_-MEDICO_SEGUIMIENTO_INTEGRAL</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4292</td>\n",
       "      <td>MEDELLIN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>MEDELLIN</td>\n",
       "      <td>ANTIOQUIA</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-10-03 00:00:00</td>\n",
       "      <td>CONSULTA_EXTERNA_PREFERENTE</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2842</td>\n",
       "      <td>ITUANGO</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>MEDELLIN</td>\n",
       "      <td>ANTIOQUIA</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-04-24 13:40:00</td>\n",
       "      <td>CONSULTA_NO_PROGRAMADA</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4292</td>\n",
       "      <td>MEDELLIN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>MEDELLIN</td>\n",
       "      <td>ANTIOQUIA</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-12-14 18:07:25</td>\n",
       "      <td>CALIFICACIÓN_DE_ORIGEN_AT</td>\n",
       "      <td>1.0</td>\n",
       "      <td>2342</td>\n",
       "      <td>ENVIGADO</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>MEDELLIN</td>\n",
       "      <td>VALLE_DEL_CAUCA</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-05-28 18:00:00</td>\n",
       "      <td>CONSULTA_EXTERNA_PREFERENTE</td>\n",
       "      <td>1.0</td>\n",
       "      <td>4781</td>\n",
       "      <td>PALMIRA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>SAN_ANDRES</td>\n",
       "      <td>SAN_ANDRES_Y_PROVIDENCIA</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-02-05 13:35:00</td>\n",
       "      <td>MEDICAMENTOS_AMBULATORIOS</td>\n",
       "      <td>1.0</td>\n",
       "      <td>5775</td>\n",
       "      <td>SAN_ANDRES</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>BOGOTA</td>\n",
       "      <td>BOGOTA_D.C.</td>\n",
       "      <td>BOGOTA</td>\n",
       "      <td>BOGOTA D.C.</td>\n",
       "      <td>2019-04-11 09:32:00</td>\n",
       "      <td>MEDICAMENTOS_AMBULATORIOS</td>\n",
       "      <td>1.0</td>\n",
       "      <td>586</td>\n",
       "      <td>BOGOTA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>SANTIAGO_DE_CALI</td>\n",
       "      <td>NaN</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-05-20 07:40:00</td>\n",
       "      <td>CONSULTA_MANO_(ORTOPEDIA_O_PLASTICO)_(L)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>834</td>\n",
       "      <td>SANTIAGO_DE_CALI</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>BOGOTA</td>\n",
       "      <td>BOGOTA_D.C.</td>\n",
       "      <td>BOGOTA</td>\n",
       "      <td>BOGOTA D.C.</td>\n",
       "      <td>2019-04-09 00:00:00</td>\n",
       "      <td>TRANSPORTE_DE_PACIENTES_(TAXI_U_OTROS)</td>\n",
       "      <td>1.0</td>\n",
       "      <td>586</td>\n",
       "      <td>BOGOTA</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>MEDELLIN</td>\n",
       "      <td>ANTIOQUIA</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-07-18 08:23:00</td>\n",
       "      <td>SESIONES_DE_FISIOTERAPIA</td>\n",
       "      <td>2.0</td>\n",
       "      <td>4292</td>\n",
       "      <td>MEDELLIN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>BOGOTA</td>\n",
       "      <td>BOGOTA_D.C.</td>\n",
       "      <td>?</td>\n",
       "      <td>?</td>\n",
       "      <td>2019-11-18 13:43:00</td>\n",
       "      <td>PROCEDIMIENTOS_AMBULATORIOS</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1411</td>\n",
       "      <td>COTA</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Nombre_Municipio_IPS   Nombre_Departamento_IPS  \\\n",
       "0              MEDELLIN                 ANTIOQUIA   \n",
       "1              MEDELLIN                 ANTIOQUIA   \n",
       "2                BOGOTA               BOGOTA_D.C.   \n",
       "3               POPAYAN                     CAUCA   \n",
       "4      SANTIAGO_DE_CALI           VALLE_DEL_CAUCA   \n",
       "5             MANIZALES                    CALDAS   \n",
       "6               PEREIRA                 RISARALDA   \n",
       "7              MEDELLIN                 ANTIOQUIA   \n",
       "8         VILLAVICENCIO                      META   \n",
       "9              MEDELLIN                 ANTIOQUIA   \n",
       "10     SANTIAGO_DE_CALI           VALLE_DEL_CAUCA   \n",
       "11              GRANADA                      META   \n",
       "12             MEDELLIN                 ANTIOQUIA   \n",
       "13             MEDELLIN                 ANTIOQUIA   \n",
       "14             MEDELLIN                 ANTIOQUIA   \n",
       "15         BARRANQUILLA                       NaN   \n",
       "16               BOGOTA               BOGOTA_D.C.   \n",
       "17     SANTIAGO_DE_CALI           VALLE_DEL_CAUCA   \n",
       "18          PUERTO_ASIS                  PUTUMAYO   \n",
       "19             MEDELLIN              CUNDINAMARCA   \n",
       "20               CERETE                       NaN   \n",
       "21             MEDELLIN                 ANTIOQUIA   \n",
       "22               BOGOTA               BOGOTA_D.C.   \n",
       "23             MEDELLIN                 ANTIOQUIA   \n",
       "24             MEDELLIN                 ANTIOQUIA   \n",
       "25             MEDELLIN                 ANTIOQUIA   \n",
       "26     SANTIAGO_DE_CALI           VALLE_DEL_CAUCA   \n",
       "27             MEDELLIN                 ANTIOQUIA   \n",
       "28             MEDELLIN                 ANTIOQUIA   \n",
       "29               BOGOTA               BOGOTA_D.C.   \n",
       "30             MEDELLIN                 ANTIOQUIA   \n",
       "31          BUCARAMANGA                 SANTANDER   \n",
       "32             MEDELLIN                 ANTIOQUIA   \n",
       "33           VALLEDUPAR                       NaN   \n",
       "34             MEDELLIN                 ANTIOQUIA   \n",
       "35             MEDELLIN                 ANTIOQUIA   \n",
       "36         BARRANQUILLA                 ATLANTICO   \n",
       "37              PEREIRA                 RISARALDA   \n",
       "38             MEDELLIN                 ANTIOQUIA   \n",
       "39             MEDELLIN                 ANTIOQUIA   \n",
       "40             MEDELLIN                 ANTIOQUIA   \n",
       "41             MEDELLIN                 ANTIOQUIA   \n",
       "42             MEDELLIN                 ANTIOQUIA   \n",
       "43             MEDELLIN           VALLE_DEL_CAUCA   \n",
       "44           SAN_ANDRES  SAN_ANDRES_Y_PROVIDENCIA   \n",
       "45               BOGOTA               BOGOTA_D.C.   \n",
       "46     SANTIAGO_DE_CALI                       NaN   \n",
       "47               BOGOTA               BOGOTA_D.C.   \n",
       "48             MEDELLIN                 ANTIOQUIA   \n",
       "49               BOGOTA               BOGOTA_D.C.   \n",
       "\n",
       "   Nombre_Municipio_Establecimiento Nombre_Departamento_Establecimiento  \\\n",
       "0                                 ?                                   ?   \n",
       "1                                 ?                                   ?   \n",
       "2                                 ?                                   ?   \n",
       "3                                 ?                                   ?   \n",
       "4                                 ?                                   ?   \n",
       "5                                 ?                                   ?   \n",
       "6                           PEREIRA                           RISARALDA   \n",
       "7                                 ?                                   ?   \n",
       "8                                 ?                                   ?   \n",
       "9                          MEDELLIN                           ANTIOQUIA   \n",
       "10                                ?                                   ?   \n",
       "11                                ?                                   ?   \n",
       "12                                ?                                   ?   \n",
       "13                                ?                                   ?   \n",
       "14                                ?                                   ?   \n",
       "15                                ?                                   ?   \n",
       "16                                ?                                   ?   \n",
       "17                                ?                                   ?   \n",
       "18                                ?                                   ?   \n",
       "19                                ?                                   ?   \n",
       "20                                ?                                   ?   \n",
       "21                                ?                                   ?   \n",
       "22                           BOGOTA                         BOGOTA D.C.   \n",
       "23                                ?                                   ?   \n",
       "24                                ?                                   ?   \n",
       "25                                ?                                   ?   \n",
       "26                                ?                                   ?   \n",
       "27                                ?                                   ?   \n",
       "28                                ?                                   ?   \n",
       "29                                ?                                   ?   \n",
       "30                                ?                                   ?   \n",
       "31                      BUCARAMANGA                           SANTANDER   \n",
       "32                                ?                                   ?   \n",
       "33                                ?                                   ?   \n",
       "34                                ?                                   ?   \n",
       "35                                ?                                   ?   \n",
       "36                     BARRANQUILLA                           ATLANTICO   \n",
       "37                                ?                                   ?   \n",
       "38                                ?                                   ?   \n",
       "39                                ?                                   ?   \n",
       "40                                ?                                   ?   \n",
       "41                                ?                                   ?   \n",
       "42                                ?                                   ?   \n",
       "43                                ?                                   ?   \n",
       "44                                ?                                   ?   \n",
       "45                           BOGOTA                         BOGOTA D.C.   \n",
       "46                                ?                                   ?   \n",
       "47                           BOGOTA                         BOGOTA D.C.   \n",
       "48                                ?                                   ?   \n",
       "49                                ?                                   ?   \n",
       "\n",
       "        FECHA_ATENCION                     Concepto_Factura_Desc  Cantidad  \\\n",
       "0  2019-07-12 06:20:00          MSI_-MEDICO_SEGUIMIENTO_INTEGRAL       1.0   \n",
       "1  2019-06-18 11:08:00                  SESIONES_DE_FISIOTERAPIA       2.0   \n",
       "2  2019-03-05 07:20:00                      CONSULTA_ORTOPEDISTA       1.0   \n",
       "3  2019-10-05 10:03:00                    CONSULTA_NO_PROGRAMADA       1.0   \n",
       "4  2019-06-25 07:13:00                               RADIOGRAFIA       1.0   \n",
       "5  2019-02-20 07:57:00                  URGENCIAS_MEDICO_GENERAL       1.0   \n",
       "6  2019-08-26 06:09:00                 MEDICAMENTOS_AMBULATORIOS       1.0   \n",
       "7  2019-06-25 15:40:00                  SESIONES_DE_FISIOTERAPIA       2.0   \n",
       "8  2019-03-07 15:00:00        RNM_-_RESONANCIA_NUCLEAR_MAGNETICA       1.0   \n",
       "9  2019-08-13 00:00:00                 MEDICAMENTOS_AMBULATORIOS       1.0   \n",
       "10 2019-05-17 13:00:00           ECOGRAFIA_-_ULTRASONOGRAFIA_(L)       1.0   \n",
       "11 2019-03-11 13:44:00                      CONSULTA_ORTOPEDISTA       1.0   \n",
       "12 2019-07-09 14:00:00                      CONSULTA_ORTOPEDISTA       1.0   \n",
       "13 2019-11-20 00:00:00                  SESIONES_DE_FISIOTERAPIA       2.0   \n",
       "14 2019-12-04 14:01:00                  SESIONES_DE_FISIOTERAPIA       2.0   \n",
       "15 2019-11-06 00:00:00                      CONSULTA_ORTOPEDISTA       1.0   \n",
       "16 2019-12-10 07:00:00                 CONSULTA_CIRUGIA_PLASTICA       1.0   \n",
       "17 2019-08-06 13:58:00                        TERAPIA_NEURAL_(L)       1.0   \n",
       "18 2019-11-06 14:41:00           LABORATORIO_CLÍNICO_AMBULATORIO       1.0   \n",
       "19 2019-08-13 11:50:00               CONSULTA_EXTERNA_PREFERENTE       1.0   \n",
       "20 2019-01-09 11:00:00          MSI_-MEDICO_SEGUIMIENTO_INTEGRAL       1.0   \n",
       "21 2019-11-19 00:00:00          MSI_-MEDICO_SEGUIMIENTO_INTEGRAL       1.0   \n",
       "22 2019-02-12 13:22:00                 MEDICAMENTOS_AMBULATORIOS       1.0   \n",
       "23 2019-02-20 09:00:00                      CONSULTA_ORTOPEDISTA       1.0   \n",
       "24 2019-10-23 12:40:00          MSI_-MEDICO_SEGUIMIENTO_INTEGRAL       1.0   \n",
       "25 2019-09-24 00:00:00          MSI_-MEDICO_SEGUIMIENTO_INTEGRAL       1.0   \n",
       "26 2019-07-03 12:48:00                               RADIOGRAFIA       1.0   \n",
       "27 2019-06-20 15:10:00                  SESIONES_DE_FISIOTERAPIA       2.0   \n",
       "28 2019-05-08 00:00:00                  SESIONES_DE_FISIOTERAPIA       2.0   \n",
       "29 2019-08-30 11:00:00               CONSULTA_MEDICINA_DEL_DOLOR       1.0   \n",
       "30 2019-06-04 15:10:00          MSI_-MEDICO_SEGUIMIENTO_INTEGRAL       1.0   \n",
       "31 2019-06-04 12:55:00                    ORTESIS_Y_LINEA_BLANDA       1.0   \n",
       "32 2019-12-27 00:00:00                    CONSULTA_NO_PROGRAMADA       1.0   \n",
       "33 2019-07-10 08:48:00                      CONSULTA_ORTOPEDISTA       1.0   \n",
       "34 2019-10-08 08:40:00                      CONSULTA_ORTOPEDISTA       1.0   \n",
       "35 2019-10-10 01:56:00                               RADIOGRAFIA       1.0   \n",
       "36 2019-07-10 11:03:50                 MEDICAMENTOS_AMBULATORIOS       1.0   \n",
       "37 2019-12-12 19:08:00                     URGENCIAS_ORTOPEDISTA       1.0   \n",
       "38 2019-06-05 09:00:00                          TAC_-_TOMOGRAFIA       1.0   \n",
       "39 2019-10-01 07:40:00          MSI_-MEDICO_SEGUIMIENTO_INTEGRAL       1.0   \n",
       "40 2019-10-03 00:00:00               CONSULTA_EXTERNA_PREFERENTE       1.0   \n",
       "41 2019-04-24 13:40:00                    CONSULTA_NO_PROGRAMADA       1.0   \n",
       "42 2019-12-14 18:07:25                 CALIFICACIÓN_DE_ORIGEN_AT       1.0   \n",
       "43 2019-05-28 18:00:00               CONSULTA_EXTERNA_PREFERENTE       1.0   \n",
       "44 2019-02-05 13:35:00                 MEDICAMENTOS_AMBULATORIOS       1.0   \n",
       "45 2019-04-11 09:32:00                 MEDICAMENTOS_AMBULATORIOS       1.0   \n",
       "46 2019-05-20 07:40:00  CONSULTA_MANO_(ORTOPEDIA_O_PLASTICO)_(L)       1.0   \n",
       "47 2019-04-09 00:00:00    TRANSPORTE_DE_PACIENTES_(TAXI_U_OTROS)       1.0   \n",
       "48 2019-07-18 08:23:00                  SESIONES_DE_FISIOTERAPIA       2.0   \n",
       "49 2019-11-18 13:43:00               PROCEDIMIENTOS_AMBULATORIOS       1.0   \n",
       "\n",
       "    Geogra_Municipio_Id               MUNICIPIO  \n",
       "0                   586                  BOGOTA  \n",
       "1                   586                  BOGOTA  \n",
       "2                   586                  BOGOTA  \n",
       "3                   834        SANTIAGO_DE_CALI  \n",
       "4                  2546                 GUACARI  \n",
       "5                  4192               MANIZALES  \n",
       "6                   657             BUCARAMANGA  \n",
       "7                   586                  BOGOTA  \n",
       "8                  7366                 ACACIAS  \n",
       "9                  4292                MEDELLIN  \n",
       "10                  834        SANTIAGO_DE_CALI  \n",
       "11                 2525                 GRANADA  \n",
       "12                  586                  BOGOTA  \n",
       "13                  586                  BOGOTA  \n",
       "14                 4292                MEDELLIN  \n",
       "15                  427            BARRANQUILLA  \n",
       "16                  586                  BOGOTA  \n",
       "17                 6505  SANTANDER_DE_QUILICHAO  \n",
       "18                 5285             PUERTO_ASIS  \n",
       "19                 4138                  MADRID  \n",
       "20                 1093                  CERETE  \n",
       "21                  586                  BOGOTA  \n",
       "22                  586                  BOGOTA  \n",
       "23                  586                  BOGOTA  \n",
       "24                 4292                MEDELLIN  \n",
       "25                  586                  BOGOTA  \n",
       "26                 7242                   YUMBO  \n",
       "27                 4292                MEDELLIN  \n",
       "28                   14                 AGUAZUL  \n",
       "29                  586                  BOGOTA  \n",
       "30                  586                  BOGOTA  \n",
       "31                 3391            LA_MONTAÑITA  \n",
       "32                 6636                  SOACHA  \n",
       "33                 7054              VALLEDUPAR  \n",
       "34                 4292                MEDELLIN  \n",
       "35                  834        SANTIAGO_DE_CALI  \n",
       "36                 3976                  LORICA  \n",
       "37                 1559            DOSQUEBRADAS  \n",
       "38                 4292                MEDELLIN  \n",
       "39                 4292                MEDELLIN  \n",
       "40                 2842                 ITUANGO  \n",
       "41                 4292                MEDELLIN  \n",
       "42                 2342                ENVIGADO  \n",
       "43                 4781                 PALMIRA  \n",
       "44                 5775              SAN_ANDRES  \n",
       "45                  586                  BOGOTA  \n",
       "46                  834        SANTIAGO_DE_CALI  \n",
       "47                  586                  BOGOTA  \n",
       "48                 4292                MEDELLIN  \n",
       "49                 1411                    COTA  "
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# PARA VERIFICAR LOS CAMBIOS\n",
    "df.head(50)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "f7ea28a9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-25T05:04:48.246050Z",
     "iopub.status.busy": "2025-04-25T05:04:48.245803Z",
     "iopub.status.idle": "2025-04-25T05:04:51.238518Z",
     "shell.execute_reply": "2025-04-25T05:04:51.237677Z"
    },
    "papermill": {
     "duration": 3.002546,
     "end_time": "2025-04-25T05:04:51.239813",
     "exception": false,
     "start_time": "2025-04-25T05:04:48.237267",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Nombre_Municipio_IPS                        6\n",
       "Nombre_Departamento_IPS                380382\n",
       "Nombre_Municipio_Establecimiento            3\n",
       "Nombre_Departamento_Establecimiento         3\n",
       "FECHA_ATENCION                              6\n",
       "Concepto_Factura_Desc                       3\n",
       "Cantidad                                    0\n",
       "Geogra_Municipio_Id                         0\n",
       "MUNICIPIO                                   0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0e62ae17",
   "metadata": {
    "papermill": {
     "duration": 0.006927,
     "end_time": "2025-04-25T05:04:51.254399",
     "exception": false,
     "start_time": "2025-04-25T05:04:51.247472",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Las variables FECHA_ATENCION y Concepto_Factura_Desc contienen muy pocos valores nulos, estos valores los podemos eliminar, pues eliminar estos registros no afectará significativamente el análisis."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "45be4dcd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-25T05:04:51.269178Z",
     "iopub.status.busy": "2025-04-25T05:04:51.268868Z",
     "iopub.status.idle": "2025-04-25T05:04:57.864808Z",
     "shell.execute_reply": "2025-04-25T05:04:57.864096Z"
    },
    "papermill": {
     "duration": 6.604913,
     "end_time": "2025-04-25T05:04:57.866299",
     "exception": false,
     "start_time": "2025-04-25T05:04:51.261386",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Filtrar y copiar para evitar\n",
    "df = df.dropna(subset=['FECHA_ATENCION', 'Concepto_Factura_Desc']).copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "a0f03a0b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-25T05:04:57.881962Z",
     "iopub.status.busy": "2025-04-25T05:04:57.881738Z",
     "iopub.status.idle": "2025-04-25T05:05:00.847097Z",
     "shell.execute_reply": "2025-04-25T05:05:00.846332Z"
    },
    "papermill": {
     "duration": 2.974323,
     "end_time": "2025-04-25T05:05:00.848437",
     "exception": false,
     "start_time": "2025-04-25T05:04:57.874114",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Nombre_Municipio_IPS                        0\n",
       "Nombre_Departamento_IPS                380376\n",
       "Nombre_Municipio_Establecimiento            0\n",
       "Nombre_Departamento_Establecimiento         0\n",
       "FECHA_ATENCION                              0\n",
       "Concepto_Factura_Desc                       0\n",
       "Cantidad                                    0\n",
       "Geogra_Municipio_Id                         0\n",
       "MUNICIPIO                                   0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8b8c8720",
   "metadata": {
    "papermill": {
     "duration": 0.007163,
     "end_time": "2025-04-25T05:05:00.863108",
     "exception": false,
     "start_time": "2025-04-25T05:05:00.855945",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Agruparemos por MUNICIPIO, CONCEPTO_FACTURA y MES, sumando la cantidad total por cada combinación."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f3bc1cd4",
   "metadata": {
    "papermill": {
     "duration": 0.007296,
     "end_time": "2025-04-25T05:05:00.877643",
     "exception": false,
     "start_time": "2025-04-25T05:05:00.870347",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Analisis Exploratorio"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "00de80c9",
   "metadata": {
    "papermill": {
     "duration": 0.006785,
     "end_time": "2025-04-25T05:05:00.891438",
     "exception": false,
     "start_time": "2025-04-25T05:05:00.884653",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "Veamos como se comporta un Concepto dado en un municipio dado a lo largo de nuestra serie de tiempo."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "503f787c",
   "metadata": {
    "papermill": {
     "duration": 0.006856,
     "end_time": "2025-04-25T05:05:00.905488",
     "exception": false,
     "start_time": "2025-04-25T05:05:00.898632",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Series Mensuales, Semanales, Diarias."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a4f19f81",
   "metadata": {
    "papermill": {
     "duration": 0.009053,
     "end_time": "2025-04-25T05:05:00.921573",
     "exception": false,
     "start_time": "2025-04-25T05:05:00.912520",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Imports"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "44e921e7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-25T05:05:00.943924Z",
     "iopub.status.busy": "2025-04-25T05:05:00.943666Z",
     "iopub.status.idle": "2025-04-25T05:05:08.555517Z",
     "shell.execute_reply": "2025-04-25T05:05:08.554392Z"
    },
    "papermill": {
     "duration": 7.624531,
     "end_time": "2025-04-25T05:05:08.557335",
     "exception": false,
     "start_time": "2025-04-25T05:05:00.932804",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting neuralforecast\r\n",
      "  Downloading neuralforecast-3.0.0-py3-none-any.whl.metadata (14 kB)\r\n",
      "Collecting coreforecast>=0.0.6 (from neuralforecast)\r\n",
      "  Downloading coreforecast-0.0.16-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.7 kB)\r\n",
      "Requirement already satisfied: fsspec in /usr/local/lib/python3.10/dist-packages (from neuralforecast) (2024.12.0)\r\n",
      "Requirement already satisfied: numpy>=1.21.6 in /usr/local/lib/python3.10/dist-packages (from neuralforecast) (1.26.4)\r\n",
      "Requirement already satisfied: pandas>=1.3.5 in /usr/local/lib/python3.10/dist-packages (from neuralforecast) (2.2.3)\r\n",
      "Requirement already satisfied: torch>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from neuralforecast) (2.5.1+cu121)\r\n",
      "Requirement already satisfied: pytorch-lightning>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from neuralforecast) (2.5.0.post0)\r\n",
      "Requirement already satisfied: ray>=2.2.0 in /usr/local/lib/python3.10/dist-packages (from ray[tune]>=2.2.0->neuralforecast) (2.42.1)\r\n",
      "Requirement already satisfied: optuna in /usr/local/lib/python3.10/dist-packages (from neuralforecast) (4.2.1)\r\n",
      "Collecting utilsforecast>=0.2.3 (from neuralforecast)\r\n",
      "  Downloading utilsforecast-0.2.12-py3-none-any.whl.metadata (7.6 kB)\r\n",
      "Requirement already satisfied: mkl_fft in /usr/local/lib/python3.10/dist-packages (from numpy>=1.21.6->neuralforecast) (1.3.8)\r\n",
      "Requirement already satisfied: mkl_random in /usr/local/lib/python3.10/dist-packages (from numpy>=1.21.6->neuralforecast) (1.2.4)\r\n",
      "Requirement already satisfied: mkl_umath in /usr/local/lib/python3.10/dist-packages (from numpy>=1.21.6->neuralforecast) (0.1.1)\r\n",
      "Requirement already satisfied: mkl in /usr/local/lib/python3.10/dist-packages (from numpy>=1.21.6->neuralforecast) (2025.0.1)\r\n",
      "Requirement already satisfied: tbb4py in /usr/local/lib/python3.10/dist-packages (from numpy>=1.21.6->neuralforecast) (2022.0.0)\r\n",
      "Requirement already satisfied: mkl-service in /usr/local/lib/python3.10/dist-packages (from numpy>=1.21.6->neuralforecast) (2.4.1)\r\n",
      "Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.3.5->neuralforecast) (2.9.0.post0)\r\n",
      "Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.3.5->neuralforecast) (2025.1)\r\n",
      "Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.10/dist-packages (from pandas>=1.3.5->neuralforecast) (2025.1)\r\n",
      "Requirement already satisfied: tqdm>=4.57.0 in /usr/local/lib/python3.10/dist-packages (from pytorch-lightning>=2.0.0->neuralforecast) (4.67.1)\r\n",
      "Requirement already satisfied: PyYAML>=5.4 in /usr/local/lib/python3.10/dist-packages (from pytorch-lightning>=2.0.0->neuralforecast) (6.0.2)\r\n",
      "Requirement already satisfied: torchmetrics>=0.7.0 in /usr/local/lib/python3.10/dist-packages (from pytorch-lightning>=2.0.0->neuralforecast) (1.6.1)\r\n",
      "Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from pytorch-lightning>=2.0.0->neuralforecast) (24.2)\r\n",
      "Requirement already satisfied: typing-extensions>=4.4.0 in /usr/local/lib/python3.10/dist-packages (from pytorch-lightning>=2.0.0->neuralforecast) (4.12.2)\r\n",
      "Requirement already satisfied: lightning-utilities>=0.10.0 in /usr/local/lib/python3.10/dist-packages (from pytorch-lightning>=2.0.0->neuralforecast) (0.12.0)\r\n",
      "Requirement already satisfied: click>=7.0 in /usr/local/lib/python3.10/dist-packages (from ray>=2.2.0->ray[tune]>=2.2.0->neuralforecast) (8.1.7)\r\n",
      "Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from ray>=2.2.0->ray[tune]>=2.2.0->neuralforecast) (3.17.0)\r\n",
      "Requirement already satisfied: jsonschema in /usr/local/lib/python3.10/dist-packages (from ray>=2.2.0->ray[tune]>=2.2.0->neuralforecast) (4.23.0)\r\n",
      "Requirement already satisfied: msgpack<2.0.0,>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from ray>=2.2.0->ray[tune]>=2.2.0->neuralforecast) (1.1.0)\r\n",
      "Requirement already satisfied: protobuf!=3.19.5,>=3.15.3 in /usr/local/lib/python3.10/dist-packages (from ray>=2.2.0->ray[tune]>=2.2.0->neuralforecast) (3.20.3)\r\n",
      "Requirement already satisfied: aiosignal in /usr/local/lib/python3.10/dist-packages (from ray>=2.2.0->ray[tune]>=2.2.0->neuralforecast) (1.3.2)\r\n",
      "Requirement already satisfied: frozenlist in /usr/local/lib/python3.10/dist-packages (from ray>=2.2.0->ray[tune]>=2.2.0->neuralforecast) (1.5.0)\r\n",
      "Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from ray>=2.2.0->ray[tune]>=2.2.0->neuralforecast) (2.32.3)\r\n",
      "Collecting tensorboardX>=1.9 (from ray[tune]>=2.2.0->neuralforecast)\r\n",
      "  Downloading tensorboardX-2.6.2.2-py2.py3-none-any.whl.metadata (5.8 kB)\r\n",
      "Requirement already satisfied: pyarrow>=9.0.0 in /usr/local/lib/python3.10/dist-packages (from ray[tune]>=2.2.0->neuralforecast) (19.0.1)\r\n",
      "Requirement already satisfied: networkx in /usr/local/lib/python3.10/dist-packages (from torch>=2.0.0->neuralforecast) (3.4.2)\r\n",
      "Requirement already satisfied: jinja2 in /usr/local/lib/python3.10/dist-packages (from torch>=2.0.0->neuralforecast) (3.1.4)\r\n",
      "Requirement already satisfied: sympy==1.13.1 in /usr/local/lib/python3.10/dist-packages (from torch>=2.0.0->neuralforecast) (1.13.1)\r\n",
      "Requirement already satisfied: mpmath<1.4,>=1.1.0 in /usr/local/lib/python3.10/dist-packages (from sympy==1.13.1->torch>=2.0.0->neuralforecast) (1.3.0)\r\n",
      "Requirement already satisfied: alembic>=1.5.0 in /usr/local/lib/python3.10/dist-packages (from optuna->neuralforecast) (1.14.1)\r\n",
      "Requirement already satisfied: colorlog in /usr/local/lib/python3.10/dist-packages (from optuna->neuralforecast) (6.9.0)\r\n",
      "Requirement already satisfied: sqlalchemy>=1.4.2 in /usr/local/lib/python3.10/dist-packages (from optuna->neuralforecast) (2.0.36)\r\n",
      "Requirement already satisfied: Mako in /usr/local/lib/python3.10/dist-packages (from alembic>=1.5.0->optuna->neuralforecast) (1.3.9)\r\n",
      "Requirement already satisfied: aiohttp!=4.0.0a0,!=4.0.0a1 in /usr/local/lib/python3.10/dist-packages (from fsspec[http]>=2022.5.0->pytorch-lightning>=2.0.0->neuralforecast) (3.11.12)\r\n",
      "Requirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from lightning-utilities>=0.10.0->pytorch-lightning>=2.0.0->neuralforecast) (75.1.0)\r\n",
      "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.10/dist-packages (from python-dateutil>=2.8.2->pandas>=1.3.5->neuralforecast) (1.17.0)\r\n",
      "Requirement already satisfied: greenlet!=0.4.17 in /usr/local/lib/python3.10/dist-packages (from sqlalchemy>=1.4.2->optuna->neuralforecast) (3.1.1)\r\n",
      "Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2->torch>=2.0.0->neuralforecast) (3.0.2)\r\n",
      "Requirement already satisfied: attrs>=22.2.0 in /usr/local/lib/python3.10/dist-packages (from jsonschema->ray>=2.2.0->ray[tune]>=2.2.0->neuralforecast) (25.1.0)\r\n",
      "Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /usr/local/lib/python3.10/dist-packages (from jsonschema->ray>=2.2.0->ray[tune]>=2.2.0->neuralforecast) (2024.10.1)\r\n",
      "Requirement already satisfied: referencing>=0.28.4 in /usr/local/lib/python3.10/dist-packages (from jsonschema->ray>=2.2.0->ray[tune]>=2.2.0->neuralforecast) (0.35.1)\r\n",
      "Requirement already satisfied: rpds-py>=0.7.1 in /usr/local/lib/python3.10/dist-packages (from jsonschema->ray>=2.2.0->ray[tune]>=2.2.0->neuralforecast) (0.22.3)\r\n",
      "Requirement already satisfied: intel-openmp>=2024 in /usr/local/lib/python3.10/dist-packages (from mkl->numpy>=1.21.6->neuralforecast) (2024.2.0)\r\n",
      "Requirement already satisfied: tbb==2022.* in /usr/local/lib/python3.10/dist-packages (from mkl->numpy>=1.21.6->neuralforecast) (2022.0.0)\r\n",
      "Requirement already satisfied: tcmlib==1.* in /usr/local/lib/python3.10/dist-packages (from tbb==2022.*->mkl->numpy>=1.21.6->neuralforecast) (1.2.0)\r\n",
      "Requirement already satisfied: intel-cmplr-lib-rt in /usr/local/lib/python3.10/dist-packages (from mkl_umath->numpy>=1.21.6->neuralforecast) (2024.2.0)\r\n",
      "Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests->ray>=2.2.0->ray[tune]>=2.2.0->neuralforecast) (3.4.1)\r\n",
      "Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->ray>=2.2.0->ray[tune]>=2.2.0->neuralforecast) (3.10)\r\n",
      "Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests->ray>=2.2.0->ray[tune]>=2.2.0->neuralforecast) (2.3.0)\r\n",
      "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests->ray>=2.2.0->ray[tune]>=2.2.0->neuralforecast) (2025.1.31)\r\n",
      "Requirement already satisfied: aiohappyeyeballs>=2.3.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->fsspec[http]>=2022.5.0->pytorch-lightning>=2.0.0->neuralforecast) (2.4.6)\r\n",
      "Requirement already satisfied: async-timeout<6.0,>=4.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->fsspec[http]>=2022.5.0->pytorch-lightning>=2.0.0->neuralforecast) (5.0.1)\r\n",
      "Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.10/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->fsspec[http]>=2022.5.0->pytorch-lightning>=2.0.0->neuralforecast) (6.1.0)\r\n",
      "Requirement already satisfied: propcache>=0.2.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->fsspec[http]>=2022.5.0->pytorch-lightning>=2.0.0->neuralforecast) (0.2.1)\r\n",
      "Requirement already satisfied: yarl<2.0,>=1.17.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp!=4.0.0a0,!=4.0.0a1->fsspec[http]>=2022.5.0->pytorch-lightning>=2.0.0->neuralforecast) (1.18.3)\r\n",
      "Requirement already satisfied: intel-cmplr-lib-ur==2024.2.0 in /usr/local/lib/python3.10/dist-packages (from intel-openmp>=2024->mkl->numpy>=1.21.6->neuralforecast) (2024.2.0)\r\n",
      "Downloading neuralforecast-3.0.0-py3-none-any.whl (257 kB)\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m257.7/257.7 kB\u001b[0m \u001b[31m5.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[?25hDownloading coreforecast-0.0.16-cp310-cp310-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (283 kB)\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m284.0/284.0 kB\u001b[0m \u001b[31m11.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[?25hDownloading utilsforecast-0.2.12-py3-none-any.whl (42 kB)\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m42.2/42.2 kB\u001b[0m \u001b[31m1.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[?25hDownloading tensorboardX-2.6.2.2-py2.py3-none-any.whl (101 kB)\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m101.7/101.7 kB\u001b[0m \u001b[31m5.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[?25hInstalling collected packages: tensorboardX, utilsforecast, coreforecast, neuralforecast\r\n",
      "Successfully installed coreforecast-0.0.16 neuralforecast-3.0.0 tensorboardX-2.6.2.2 utilsforecast-0.2.12\r\n"
     ]
    }
   ],
   "source": [
    "# Instalar solo lo que falta (neuralforecast), cuando se entrene modelo, recuerda encender el internet.\n",
    "!pip install neuralforecast \n",
    "#!pip install statsmodels #por si no esta"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "c46e2c35",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-25T05:05:08.575593Z",
     "iopub.status.busy": "2025-04-25T05:05:08.575337Z",
     "iopub.status.idle": "2025-04-25T05:05:36.472862Z",
     "shell.execute_reply": "2025-04-25T05:05:36.471936Z"
    },
    "papermill": {
     "duration": 27.908434,
     "end_time": "2025-04-25T05:05:36.474761",
     "exception": false,
     "start_time": "2025-04-25T05:05:08.566327",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# Mejoras en configuración inicial\n",
    "import os\n",
    "import warnings\n",
    "import torch\n",
    "import matplotlib.pyplot as plt\n",
    "from neuralforecast import NeuralForecast\n",
    "from neuralforecast.models import NBEATS, NBEATSx  # Añadido NBEATSx (versión mejorada)\n",
    "from neuralforecast.losses.pytorch import MAE, MASE, SMAPE  # Añadidas más funciones de pérdida\n",
    "from sklearn.preprocessing import LabelEncoder, RobustScaler  # Añadido RobustScaler para mayor robustez\n",
    "from statsmodels.tsa.stattools import adfuller, kpss\n",
    "from statsmodels.stats.diagnostic import acorr_ljungbox\n",
    "from statsmodels.tsa.seasonal import STL\n",
    "import gc\n",
    "import joblib\n",
    "from tqdm import tqdm  # Para barras de progreso"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "df248695",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-25T05:05:36.495296Z",
     "iopub.status.busy": "2025-04-25T05:05:36.494698Z",
     "iopub.status.idle": "2025-04-25T05:05:36.588534Z",
     "shell.execute_reply": "2025-04-25T05:05:36.587495Z"
    },
    "papermill": {
     "duration": 0.104431,
     "end_time": "2025-04-25T05:05:36.590051",
     "exception": false,
     "start_time": "2025-04-25T05:05:36.485620",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Usando dispositivo: cuda\n",
      "GPU disponible: Tesla T4\n",
      "Memoria GPU: 15.83 GB\n"
     ]
    }
   ],
   "source": [
    "# Suprimir advertencias no críticas\n",
    "warnings.filterwarnings('ignore')\n",
    "\n",
    "# Configuración avanzada de rendimiento\n",
    "torch.set_float32_matmul_precision('high')\n",
    "torch.backends.cudnn.benchmark = True  # Acelera operaciones convolutivas\n",
    "device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\n",
    "print(f'Usando dispositivo: {device}')\n",
    "\n",
    "# Configuración de memoria para GPU si está disponible\n",
    "if torch.cuda.is_available():\n",
    "    torch.cuda.empty_cache()\n",
    "    print(f'GPU disponible: {torch.cuda.get_device_name(1)}')\n",
    "    print(f'Memoria GPU: {torch.cuda.get_device_properties(1).total_memory / 1e9:.2f} GB')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dbcad861",
   "metadata": {
    "papermill": {
     "duration": 0.008071,
     "end_time": "2025-04-25T05:05:36.606777",
     "exception": false,
     "start_time": "2025-04-25T05:05:36.598706",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Serie Semanal"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "adf71838",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-25T05:05:36.624341Z",
     "iopub.status.busy": "2025-04-25T05:05:36.624053Z",
     "iopub.status.idle": "2025-04-25T05:05:36.629950Z",
     "shell.execute_reply": "2025-04-25T05:05:36.629355Z"
    },
    "jupyter": {
     "source_hidden": true
    },
    "papermill": {
     "duration": 0.016161,
     "end_time": "2025-04-25T05:05:36.631181",
     "exception": false,
     "start_time": "2025-04-25T05:05:36.615020",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# import gc\n",
    "# import matplotlib.pyplot as plt\n",
    "# import warnings\n",
    "\n",
    "# warnings.filterwarnings('ignore', category=UserWarning, module='pandas') # Ignorar advertencias sobre Period\n",
    "\n",
    "# def load_and_preprocess_detailed_weekly(file_path, covid_start_date='2020-03-01', covid_end_date='2022-06-30',\n",
    "#                                        filter_min_weeks_active=5, filter_min_total_qty=10):\n",
    "#     \"\"\"\n",
    "#     Carga y preprocesa datos de demanda desde archivo Parquet, agregando\n",
    "#     SEMANALMENTE por Municipio y Concepto de Factura.\n",
    "#     Crea un ID único por serie, incluye flag COVID y aplica filtros opcionales.\n",
    "\n",
    "#     Args:\n",
    "#         file_path: Ruta al archivo Parquet.\n",
    "#         covid_start_date: Fecha de inicio (inclusive) para marcar como periodo COVID.\n",
    "#         covid_end_date: Fecha de fin (inclusive) para marcar como periodo COVID.\n",
    "#         filter_min_weeks_active: int o None. Si es int, filtra series con menos semanas de actividad (>0).\n",
    "#         filter_min_total_qty: int o None. Si es int, filtra series con cantidad total menor a este valor.\n",
    "#     \"\"\"\n",
    "#     # Leer columnas necesarias desde Parquet\n",
    "#     print(\"Cargando datos...\")\n",
    "#     required_columns = ['FECHA_ATENCION', 'MUNICIPIO', 'Concepto_Factura_Desc', 'Cantidad']\n",
    "#     try:\n",
    "#         df = pd.read_parquet(file_path, columns=required_columns)\n",
    "#     except Exception as e:\n",
    "#         raise FileNotFoundError(f\"Error al leer el archivo Parquet '{file_path}': {e}\")\n",
    "\n",
    "#     # --- Verificación inicial ---\n",
    "#     if df.empty:\n",
    "#         raise ValueError(\"El archivo Parquet está vacío o no contiene las columnas requeridas.\")\n",
    "#     print(f\"Columnas cargadas: {df.columns.tolist()}\")\n",
    "#     print(f\"Filas iniciales: {len(df):,}\")\n",
    "\n",
    "#     # Limpiar nombres y manejar nulos iniciales\n",
    "#     df.columns = df.columns.str.strip()\n",
    "#     for col in required_columns:\n",
    "#         if col not in df.columns:\n",
    "#             raise ValueError(f\"La columna requerida '{col}' no se encontró en el archivo.\")\n",
    "#     df.dropna(subset=['FECHA_ATENCION', 'MUNICIPIO', 'Concepto_Factura_Desc'], inplace=True)\n",
    "#     df['Cantidad'] = df['Cantidad'].fillna(0)\n",
    "\n",
    "#     print(f\"Filas después de eliminar nulos en claves: {len(df):,}\")\n",
    "#     if df.empty:\n",
    "#         print(\"Advertencia: No quedan datos después de eliminar nulos en columnas clave.\")\n",
    "#         return pd.DataFrame(), [], [], []\n",
    "\n",
    "#     # Optimizar tipos de datos\n",
    "#     print(\"Optimizando tipos de datos...\")\n",
    "#     df['MUNICIPIO'] = df['MUNICIPIO'].astype('category')\n",
    "#     df['Concepto_Factura_Desc'] = df['Concepto_Factura_Desc'].astype('category')\n",
    "#     df['Cantidad'] = pd.to_numeric(df['Cantidad'], errors='coerce').fillna(0).astype('float32')\n",
    "#     df['FECHA_ATENCION'] = pd.to_datetime(df['FECHA_ATENCION'], errors='coerce')\n",
    "#     df.dropna(subset=['FECHA_ATENCION'], inplace=True) # Eliminar fechas inválidas\n",
    "\n",
    "#     print(f\"Filas después de eliminar fechas inválidas: {len(df):,}\")\n",
    "#     if df.empty:\n",
    "#         print(\"Advertencia: No quedan datos después de eliminar fechas inválidas.\")\n",
    "#         return pd.DataFrame(), [], [], []\n",
    "\n",
    "#     print(f\"Dataset optimizado: {df.shape[0]:,} filas, {df.memory_usage(deep=True).sum() / 1e6:.2f} MB\")\n",
    "\n",
    "#     # --- Agregación SEMANAL ---\n",
    "#     print(\"Agregando datos por SEMANA (inicio Lunes), municipio y concepto...\")\n",
    "#     # Usamos dt.to_period('W') para obtener la semana ISO y .dt.to_timestamp() para obtener\n",
    "#     # el timestamp del LUNES de esa semana, lo que facilita el rellenado posterior.\n",
    "#     df['ds'] = df['FECHA_ATENCION'].dt.to_period('W').dt.to_timestamp() # <-- CAMBIO CLAVE: Semana\n",
    "#     grouping_cols = ['MUNICIPIO', 'Concepto_Factura_Desc', 'ds']\n",
    "\n",
    "#     df_semanal = (\n",
    "#         df.groupby(grouping_cols, observed=False)['Cantidad'] # observed=False puede ser más seguro con categories\n",
    "#         .sum()\n",
    "#         .reset_index()\n",
    "#         .rename(columns={'Cantidad': 'y'})\n",
    "#     )\n",
    "#     print(f\"Filas después de agregar SEMANALMENTE: {len(df_semanal):,}\")\n",
    "\n",
    "#     if df_semanal.empty:\n",
    "#        print(\"Advertencia: No hay datos después de la agregación semanal.\")\n",
    "#        return pd.DataFrame(), [], [], []\n",
    "\n",
    "#     # Crear el Identificador Único de Serie (ID_Serie)\n",
    "#     print(\"Creando ID_Serie...\")\n",
    "#     df_semanal['ID_Serie'] = df_semanal['MUNICIPIO'].astype(str) + '_' + df_semanal['Concepto_Factura_Desc'].astype(str)\n",
    "#     df_semanal['ID_Serie'] = df_semanal['ID_Serie'].astype('category')\n",
    "\n",
    "#     # --- Filtrado Opcional de Series (ANTES de completar) ---\n",
    "#     num_series_before_filter = df_semanal['ID_Serie'].nunique()\n",
    "#     print(f\"Número de series únicas ANTES del filtrado: {num_series_before_filter:,}\")\n",
    "\n",
    "#     if filter_min_weeks_active is not None and filter_min_weeks_active > 0:\n",
    "#         print(f\"Filtrando series con menos de {filter_min_weeks_active} semanas activas (y>0)...\")\n",
    "#         weeks_active = df_semanal[df_semanal['y'] > 0].groupby('ID_Serie')['ds'].nunique()\n",
    "#         series_to_keep_active = weeks_active[weeks_active >= filter_min_weeks_active].index\n",
    "#         df_semanal = df_semanal[df_semanal['ID_Serie'].isin(series_to_keep_active)]\n",
    "#         print(f\"  Series restantes después del filtro de actividad: {df_semanal['ID_Serie'].nunique():,}\")\n",
    "\n",
    "#     if filter_min_total_qty is not None and filter_min_total_qty > 0:\n",
    "#          print(f\"Filtrando series con cantidad total menor a {filter_min_total_qty}...\")\n",
    "#          total_qty = df_semanal.groupby('ID_Serie')['y'].sum()\n",
    "#          series_to_keep_qty = total_qty[total_qty >= filter_min_total_qty].index\n",
    "#          df_semanal = df_semanal[df_semanal['ID_Serie'].isin(series_to_keep_qty)]\n",
    "#          print(f\"  Series restantes después del filtro de cantidad: {df_semanal['ID_Serie'].nunique():,}\")\n",
    "\n",
    "#     num_series_after_filter = df_semanal['ID_Serie'].nunique()\n",
    "#     if num_series_after_filter == 0:\n",
    "#         print(\"Advertencia: El filtrado eliminó todas las series.\")\n",
    "#         return pd.DataFrame(), [], [], []\n",
    "#     print(f\"Número de series únicas DESPUÉS del filtrado: {num_series_after_filter:,}\")\n",
    "\n",
    "\n",
    "#     # --- Completar series temporales SEMANALES para cada ID_Serie filtrada ---\n",
    "#     print(\"Completando series temporales SEMANALES por ID_Serie filtrada...\")\n",
    "#     min_week = df_semanal['ds'].min()\n",
    "#     max_week = df_semanal['ds'].max()\n",
    "#     # Usar freq='W-MON' para asegurar que coincide con el timestamp generado por .to_period('W').dt.to_timestamp()\n",
    "#     week_range = pd.date_range(min_week, max_week, freq='W-MON') # Frecuencia Semanal (Lunes)\n",
    "\n",
    "#     unique_series_ids_filtered = df_semanal['ID_Serie'].unique()\n",
    "\n",
    "#     # Mapa para restaurar detalles\n",
    "#     map_id_to_details = df_semanal[['ID_Serie', 'MUNICIPIO', 'Concepto_Factura_Desc']].drop_duplicates().set_index('ID_Serie')\n",
    "\n",
    "#     # MultiIndex con combinaciones semana-serie filtrada\n",
    "#     idx = pd.MultiIndex.from_product(\n",
    "#         [unique_series_ids_filtered, week_range],\n",
    "#         names=['ID_Serie', 'ds']\n",
    "#     )\n",
    "\n",
    "#     # Reindexar y rellenar\n",
    "#     serie_completa = (\n",
    "#         df_semanal.set_index(['ID_Serie', 'ds'])['y']\n",
    "#         .reindex(idx, fill_value=0)\n",
    "#         .reset_index()\n",
    "#     )\n",
    "\n",
    "#     # Añadir detalles de Municipio/Concepto\n",
    "#     serie_completa = pd.merge(serie_completa, map_id_to_details.reset_index(), on='ID_Serie', how='left')\n",
    "\n",
    "#     print(f\"Filas después de completar series SEMANALES: {len(serie_completa):,}\")\n",
    "#     print(f\"Uso de memoria estimado: {serie_completa.memory_usage(deep=True).sum() / 1e6:.2f} MB\") # Mucho menor ahora\n",
    "\n",
    "#     # --- Añadir características temporales SEMANALES ---\n",
    "#     print(\"Añadiendo características temporales semanales...\")\n",
    "#     serie_completa['año'] = serie_completa['ds'].dt.year\n",
    "#     serie_completa['mes'] = serie_completa['ds'].dt.month # El mes puede seguir siendo útil\n",
    "#     serie_completa['semana_año'] = serie_completa['ds'].dt.isocalendar().week.astype(int) # <-- Característica semanal clave\n",
    "#     serie_completa['trimestre'] = serie_completa['ds'].dt.quarter\n",
    "#     # Se eliminan características diarias\n",
    "\n",
    "#     # Añadir índice de tiempo numérico (número de semanas transcurridas por serie)\n",
    "#     print(\"Añadiendo índice de tiempo numérico (time_idx)...\")\n",
    "#     serie_completa = serie_completa.sort_values(by=['ID_Serie', 'ds'])\n",
    "#     serie_completa['time_idx'] = serie_completa.groupby('ID_Serie').cumcount()\n",
    "\n",
    "#     # --- Añadir flag para el periodo COVID ---\n",
    "#     print(\"Añadiendo flag COVID...\")\n",
    "#     start_dt = pd.to_datetime(covid_start_date)\n",
    "#     end_dt = pd.to_datetime(covid_end_date)\n",
    "#     # La comparación funciona igual con las fechas de inicio de semana\n",
    "#     serie_completa['es_covid'] = (\n",
    "#         (serie_completa['ds'] >= start_dt) & (serie_completa['ds'] <= end_dt)\n",
    "#     ).astype(int)\n",
    "\n",
    "#     # Liberar memoria\n",
    "#     del df, df_semanal\n",
    "#     gc.collect()\n",
    "\n",
    "#     # Obtener listas únicas finales (basadas en el df filtrado y completado)\n",
    "#     municipios_final = serie_completa['MUNICIPIO'].unique().tolist()\n",
    "#     conceptos_final = serie_completa['Concepto_Factura_Desc'].unique().tolist()\n",
    "#     series_ids_final = serie_completa['ID_Serie'].unique().tolist() # Ya son las filtradas\n",
    "\n",
    "#     print(f\"Procesamiento SEMANAL completo para {len(series_ids_final)} series únicas (Municipio-Concepto)\")\n",
    "#     print(f\"Total de registros en la serie final: {serie_completa.shape[0]:,}\") # <-- ESTE NÚMERO DEBERÍA SER MUCHO MENOR\n",
    "#     print(f\"Periodo cubierto (inicio de semana): {min_week.strftime('%Y-%m-%d')} a {max_week.strftime('%Y-%m-%d')}\")\n",
    "#     print(f\"Columnas finales: {serie_completa.columns.tolist()}\")\n",
    "\n",
    "#     return serie_completa, municipios_final, conceptos_final, series_ids_final\n",
    "\n",
    "# def visualize_specific_series_weekly(serie_completa, id_serie_to_visualize):\n",
    "#     \"\"\"\n",
    "#     Visualiza la demanda SEMANAL de una serie específica (Municipio-Concepto).\n",
    "#     \"\"\"\n",
    "#     plt.figure(figsize=(16, 7)) # Ancho adecuado para series semanales\n",
    "\n",
    "#     datos_serie = serie_completa[serie_completa['ID_Serie'] == id_serie_to_visualize].sort_values('ds')\n",
    "\n",
    "#     if datos_serie.empty:\n",
    "#         print(f\"No se encontraron datos para ID_Serie: {id_serie_to_visualize}\")\n",
    "#         return\n",
    "\n",
    "#     plt.plot(datos_serie['ds'], datos_serie['y'], marker='.', linestyle='-', label='Demanda Semanal (y)', markersize=5)\n",
    "\n",
    "#     # Resaltar periodo COVID\n",
    "#     if 'es_covid' in datos_serie.columns:\n",
    "#         covid_period = datos_serie[datos_serie['es_covid'] == 1]\n",
    "#         if not covid_period.empty:\n",
    "#             plt.fill_between(datos_serie['ds'], 0, datos_serie['y'].max() * 1.05,\n",
    "#                              where=datos_serie['es_covid'] == 1,\n",
    "#                              color='red', alpha=0.15, label='Periodo COVID estimado')\n",
    "\n",
    "#     plt.title(f'Demanda SEMANAL - Serie: {id_serie_to_visualize}')\n",
    "#     plt.xlabel('Semana (Inicio Lunes)')\n",
    "#     plt.ylabel('Cantidad (y)')\n",
    "#     plt.grid(True, linestyle='--', alpha=0.6)\n",
    "#     plt.xticks(rotation=30, ha='right')\n",
    "#     plt.legend()\n",
    "#     plt.tight_layout()\n",
    "#     plt.show()\n",
    "\n",
    "# # --- Uso ---\n",
    "# file_path = '/kaggle/input/vfinal/Final.parquet' \n",
    "\n",
    "# # --- AJUSTA LOS PARÁMETROS DE FILTRADO AQUÍ ---\n",
    "# # Puedes empezar sin filtros (None) o con valores bajos y ver cuántas series quedan\n",
    "# min_semanas_activas = 10 # Ejemplo: requerir al menos 10 semanas con alguna atención\n",
    "# min_cantidad_total = 20  # Ejemplo: requerir al menos 20 atenciones totales en toda la historia\n",
    "\n",
    "# try:\n",
    "#     # Llamar a la función semanal con los filtros\n",
    "#     serie_final_semanal, municipios, conceptos, series_ids = load_and_preprocess_detailed_weekly(\n",
    "#         file_path,\n",
    "#         filter_min_weeks_active=min_semanas_activas,\n",
    "#         filter_min_total_qty=min_cantidad_total\n",
    "#     )\n",
    "\n",
    "#     if not serie_final_semanal.empty:\n",
    "#         print(\"\\n--- Resumen del DataFrame Procesado SEMANAL ---\")\n",
    "#         print(serie_final_semanal.head())\n",
    "#         print(\"\\nInformación del DataFrame:\")\n",
    "#         serie_final_semanal.info(verbose=False, memory_usage='deep')\n",
    "#         print(f\"\\nNúmero de Municipios únicos: {len(municipios)}\")\n",
    "#         print(f\"Número de Conceptos únicos: {len(conceptos)}\")\n",
    "#         print(f\"\\nNúmero de Series únicas (ID_Serie) DESPUÉS de filtrar: {len(series_ids)}\") # <-- Número clave\n",
    "#         print(f\"Número TOTAL de filas final: {len(serie_final_semanal):,}\") # <-- Número clave\n",
    "#         print(f\"Rango de fechas (inicio semana): {serie_final_semanal['ds'].min()} a {serie_final_semanal['ds'].max()}\")\n",
    "\n",
    "\n",
    "#         if series_ids:\n",
    "#             id_ejemplo = series_ids[np.random.randint(0, len(series_ids))] # Elegir una serie al azar de las filtradas\n",
    "#             print(f\"\\nVisualizando ejemplo SEMANAL para la serie: {id_ejemplo}\")\n",
    "#             visualize_specific_series_weekly(serie_final_semanal, id_ejemplo)\n",
    "\n",
    "# except FileNotFoundError as fnf:\n",
    "#     print(f\"Error: {fnf}\")\n",
    "# except ValueError as ve:\n",
    "#     print(f\"Error de datos: {ve}\")\n",
    "# except Exception as e:\n",
    "#     print(f\"Ocurrió un error inesperado durante el procesamiento semanal: {e}\")\n",
    "#     import traceback\n",
    "#     traceback.print_exc()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "96d34fda",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-25T05:05:36.648653Z",
     "iopub.status.busy": "2025-04-25T05:05:36.648445Z",
     "iopub.status.idle": "2025-04-25T05:05:36.653640Z",
     "shell.execute_reply": "2025-04-25T05:05:36.653039Z"
    },
    "papermill": {
     "duration": 0.015062,
     "end_time": "2025-04-25T05:05:36.654773",
     "exception": false,
     "start_time": "2025-04-25T05:05:36.639711",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "def visualize_specific_series_weekly(serie_completa, id_serie_to_visualize):\n",
    "    \"\"\"\n",
    "    Visualiza la demanda SEMANAL de una serie específica (Municipio-Concepto).\n",
    "    \"\"\"\n",
    "    plt.figure(figsize=(16, 7)) # Ancho adecuado para series semanales\n",
    "\n",
    "    datos_serie = serie_completa[serie_completa['ID_Serie'] == id_serie_to_visualize].sort_values('ds')\n",
    "\n",
    "    if datos_serie.empty:\n",
    "        print(f\"No se encontraron datos para ID_Serie: {id_serie_to_visualize}\")\n",
    "        return\n",
    "\n",
    "    plt.plot(datos_serie['ds'], datos_serie['y'], marker='.', linestyle='-', label='Demanda Semanal (y)', markersize=5)\n",
    "\n",
    "    # Resaltar periodo COVID\n",
    "    if 'es_covid' in datos_serie.columns:\n",
    "        covid_period = datos_serie[datos_serie['es_covid'] == 1]\n",
    "        if not covid_period.empty:\n",
    "            plt.fill_between(datos_serie['ds'], 0, datos_serie['y'].max() * 1.05,\n",
    "                             where=datos_serie['es_covid'] == 1,\n",
    "                             color='red', alpha=0.15, label='Periodo COVID estimado')\n",
    "\n",
    "    plt.title(f'Demanda SEMANAL - Serie: {id_serie_to_visualize}')\n",
    "    plt.xlabel('Semana (Inicio Lunes)')\n",
    "    plt.ylabel('Cantidad (y)')\n",
    "    plt.grid(True, linestyle='--', alpha=0.6)\n",
    "    plt.xticks(rotation=30, ha='right')\n",
    "    plt.legend()\n",
    "    plt.tight_layout()\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "6dcc0334",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-25T05:05:36.672212Z",
     "iopub.status.busy": "2025-04-25T05:05:36.671952Z",
     "iopub.status.idle": "2025-04-25T05:05:38.482985Z",
     "shell.execute_reply": "2025-04-25T05:05:38.482282Z"
    },
    "papermill": {
     "duration": 1.82132,
     "end_time": "2025-04-25T05:05:38.484555",
     "exception": false,
     "start_time": "2025-04-25T05:05:36.663235",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "serie_semanal = pd.read_parquet(\"/kaggle/input/semanalfinal/identificados_semanal.parquet\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "828a34cb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-25T05:05:38.504344Z",
     "iopub.status.busy": "2025-04-25T05:05:38.504099Z",
     "iopub.status.idle": "2025-04-25T05:05:38.520004Z",
     "shell.execute_reply": "2025-04-25T05:05:38.519340Z"
    },
    "papermill": {
     "duration": 0.026429,
     "end_time": "2025-04-25T05:05:38.521277",
     "exception": false,
     "start_time": "2025-04-25T05:05:38.494848",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID_Serie</th>\n",
       "      <th>ds</th>\n",
       "      <th>y</th>\n",
       "      <th>MUNICIPIO</th>\n",
       "      <th>Concepto_Factura_Desc</th>\n",
       "      <th>año</th>\n",
       "      <th>mes</th>\n",
       "      <th>semana_año</th>\n",
       "      <th>trimestre</th>\n",
       "      <th>time_idx</th>\n",
       "      <th>es_covid</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>ABEJORRAL_CALIFICACIO PERDIDA DE CAPACIDAD LAB...</td>\n",
       "      <td>2018-12-31</td>\n",
       "      <td>0.0</td>\n",
       "      <td>ABEJORRAL</td>\n",
       "      <td>CALIFICACIO PERDIDA DE CAPACIDAD LABORAL</td>\n",
       "      <td>2018</td>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>ABEJORRAL_CALIFICACIO PERDIDA DE CAPACIDAD LAB...</td>\n",
       "      <td>2019-01-07</td>\n",
       "      <td>0.0</td>\n",
       "      <td>ABEJORRAL</td>\n",
       "      <td>CALIFICACIO PERDIDA DE CAPACIDAD LABORAL</td>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>ABEJORRAL_CALIFICACIO PERDIDA DE CAPACIDAD LAB...</td>\n",
       "      <td>2019-01-14</td>\n",
       "      <td>0.0</td>\n",
       "      <td>ABEJORRAL</td>\n",
       "      <td>CALIFICACIO PERDIDA DE CAPACIDAD LABORAL</td>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>ABEJORRAL_CALIFICACIO PERDIDA DE CAPACIDAD LAB...</td>\n",
       "      <td>2019-01-21</td>\n",
       "      <td>0.0</td>\n",
       "      <td>ABEJORRAL</td>\n",
       "      <td>CALIFICACIO PERDIDA DE CAPACIDAD LABORAL</td>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>ABEJORRAL_CALIFICACIO PERDIDA DE CAPACIDAD LAB...</td>\n",
       "      <td>2019-01-28</td>\n",
       "      <td>0.0</td>\n",
       "      <td>ABEJORRAL</td>\n",
       "      <td>CALIFICACIO PERDIDA DE CAPACIDAD LABORAL</td>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6863721</th>\n",
       "      <td>ZIPAQUIRA_VACUNACION HEPATITIS B (L)</td>\n",
       "      <td>2024-12-02</td>\n",
       "      <td>0.0</td>\n",
       "      <td>ZIPAQUIRA</td>\n",
       "      <td>VACUNACION HEPATITIS B (L)</td>\n",
       "      <td>2024</td>\n",
       "      <td>12</td>\n",
       "      <td>49</td>\n",
       "      <td>4</td>\n",
       "      <td>309</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6863722</th>\n",
       "      <td>ZIPAQUIRA_VACUNACION HEPATITIS B (L)</td>\n",
       "      <td>2024-12-09</td>\n",
       "      <td>0.0</td>\n",
       "      <td>ZIPAQUIRA</td>\n",
       "      <td>VACUNACION HEPATITIS B (L)</td>\n",
       "      <td>2024</td>\n",
       "      <td>12</td>\n",
       "      <td>50</td>\n",
       "      <td>4</td>\n",
       "      <td>310</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6863723</th>\n",
       "      <td>ZIPAQUIRA_VACUNACION HEPATITIS B (L)</td>\n",
       "      <td>2024-12-16</td>\n",
       "      <td>0.0</td>\n",
       "      <td>ZIPAQUIRA</td>\n",
       "      <td>VACUNACION HEPATITIS B (L)</td>\n",
       "      <td>2024</td>\n",
       "      <td>12</td>\n",
       "      <td>51</td>\n",
       "      <td>4</td>\n",
       "      <td>311</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6863724</th>\n",
       "      <td>ZIPAQUIRA_VACUNACION HEPATITIS B (L)</td>\n",
       "      <td>2024-12-23</td>\n",
       "      <td>0.0</td>\n",
       "      <td>ZIPAQUIRA</td>\n",
       "      <td>VACUNACION HEPATITIS B (L)</td>\n",
       "      <td>2024</td>\n",
       "      <td>12</td>\n",
       "      <td>52</td>\n",
       "      <td>4</td>\n",
       "      <td>312</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6863725</th>\n",
       "      <td>ZIPAQUIRA_VACUNACION HEPATITIS B (L)</td>\n",
       "      <td>2024-12-30</td>\n",
       "      <td>0.0</td>\n",
       "      <td>ZIPAQUIRA</td>\n",
       "      <td>VACUNACION HEPATITIS B (L)</td>\n",
       "      <td>2024</td>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>313</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>6863726 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                  ID_Serie         ds    y  \\\n",
       "0        ABEJORRAL_CALIFICACIO PERDIDA DE CAPACIDAD LAB... 2018-12-31  0.0   \n",
       "1        ABEJORRAL_CALIFICACIO PERDIDA DE CAPACIDAD LAB... 2019-01-07  0.0   \n",
       "2        ABEJORRAL_CALIFICACIO PERDIDA DE CAPACIDAD LAB... 2019-01-14  0.0   \n",
       "3        ABEJORRAL_CALIFICACIO PERDIDA DE CAPACIDAD LAB... 2019-01-21  0.0   \n",
       "4        ABEJORRAL_CALIFICACIO PERDIDA DE CAPACIDAD LAB... 2019-01-28  0.0   \n",
       "...                                                    ...        ...  ...   \n",
       "6863721               ZIPAQUIRA_VACUNACION HEPATITIS B (L) 2024-12-02  0.0   \n",
       "6863722               ZIPAQUIRA_VACUNACION HEPATITIS B (L) 2024-12-09  0.0   \n",
       "6863723               ZIPAQUIRA_VACUNACION HEPATITIS B (L) 2024-12-16  0.0   \n",
       "6863724               ZIPAQUIRA_VACUNACION HEPATITIS B (L) 2024-12-23  0.0   \n",
       "6863725               ZIPAQUIRA_VACUNACION HEPATITIS B (L) 2024-12-30  0.0   \n",
       "\n",
       "         MUNICIPIO                     Concepto_Factura_Desc   año  mes  \\\n",
       "0        ABEJORRAL  CALIFICACIO PERDIDA DE CAPACIDAD LABORAL  2018   12   \n",
       "1        ABEJORRAL  CALIFICACIO PERDIDA DE CAPACIDAD LABORAL  2019    1   \n",
       "2        ABEJORRAL  CALIFICACIO PERDIDA DE CAPACIDAD LABORAL  2019    1   \n",
       "3        ABEJORRAL  CALIFICACIO PERDIDA DE CAPACIDAD LABORAL  2019    1   \n",
       "4        ABEJORRAL  CALIFICACIO PERDIDA DE CAPACIDAD LABORAL  2019    1   \n",
       "...            ...                                       ...   ...  ...   \n",
       "6863721  ZIPAQUIRA                VACUNACION HEPATITIS B (L)  2024   12   \n",
       "6863722  ZIPAQUIRA                VACUNACION HEPATITIS B (L)  2024   12   \n",
       "6863723  ZIPAQUIRA                VACUNACION HEPATITIS B (L)  2024   12   \n",
       "6863724  ZIPAQUIRA                VACUNACION HEPATITIS B (L)  2024   12   \n",
       "6863725  ZIPAQUIRA                VACUNACION HEPATITIS B (L)  2024   12   \n",
       "\n",
       "         semana_año  trimestre  time_idx  es_covid  \n",
       "0                 1          4         0         0  \n",
       "1                 2          1         1         0  \n",
       "2                 3          1         2         0  \n",
       "3                 4          1         3         0  \n",
       "4                 5          1         4         0  \n",
       "...             ...        ...       ...       ...  \n",
       "6863721          49          4       309         0  \n",
       "6863722          50          4       310         0  \n",
       "6863723          51          4       311         0  \n",
       "6863724          52          4       312         0  \n",
       "6863725           1          4       313         0  \n",
       "\n",
       "[6863726 rows x 11 columns]"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "serie_semanal"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "064e8395",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-25T05:05:38.539596Z",
     "iopub.status.busy": "2025-04-25T05:05:38.539386Z",
     "iopub.status.idle": "2025-04-25T05:05:38.577583Z",
     "shell.execute_reply": "2025-04-25T05:05:38.576987Z"
    },
    "papermill": {
     "duration": 0.048405,
     "end_time": "2025-04-25T05:05:38.578785",
     "exception": false,
     "start_time": "2025-04-25T05:05:38.530380",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "series_ids = serie_semanal['ID_Serie'].unique().tolist()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "146af097",
   "metadata": {
    "papermill": {
     "duration": 0.008335,
     "end_time": "2025-04-25T05:05:38.595845",
     "exception": false,
     "start_time": "2025-04-25T05:05:38.587510",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### Visualizar semanal"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "ea495af5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-25T05:05:38.613564Z",
     "iopub.status.busy": "2025-04-25T05:05:38.613359Z",
     "iopub.status.idle": "2025-04-25T05:05:39.126308Z",
     "shell.execute_reply": "2025-04-25T05:05:39.125236Z"
    },
    "papermill": {
     "duration": 0.525926,
     "end_time": "2025-04-25T05:05:39.130246",
     "exception": false,
     "start_time": "2025-04-25T05:05:38.604320",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Visualizando ejemplo SEMANAL para la serie: BOGOTA_SESIONES DE FISIOTERAPIA\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1600x700 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "id_ejemplo = series_ids[2406] # Elegir una serie\n",
    "print(f\"\\nVisualizando ejemplo SEMANAL para la serie: {id_ejemplo}\")\n",
    "visualize_specific_series_weekly(serie_semanal, id_ejemplo)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ff98f85c",
   "metadata": {
    "papermill": {
     "duration": 0.011454,
     "end_time": "2025-04-25T05:05:39.155433",
     "exception": false,
     "start_time": "2025-04-25T05:05:39.143979",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Modelo N-Beats"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "6eb16e86",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2025-04-25T05:05:39.179323Z",
     "iopub.status.busy": "2025-04-25T05:05:39.179039Z",
     "iopub.status.idle": "2025-04-25T05:12:39.829142Z",
     "shell.execute_reply": "2025-04-25T05:12:39.828148Z"
    },
    "jupyter": {
     "source_hidden": true
    },
    "papermill": {
     "duration": 420.663884,
     "end_time": "2025-04-25T05:12:39.830719",
     "exception": false,
     "start_time": "2025-04-25T05:05:39.166835",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Usando dispositivo: cuda\n",
      "\n",
      "========================================================\n",
      "Procesando ID_Serie: BOGOTA_SESIONES DE FISIOTERAPIA (Índice: 2406)\n",
      "========================================================\n",
      "\n",
      "Entrenando modelo N-BEATS para BOGOTA_SESIONES DE FISIOTERAPIA...\n",
      "Params: lr=0.0003, epochs=50, patience=10, batch=32\n",
      "Arch: hidden=1024, blocks=18, layers=8, stacks=4\n",
      "Window: input=94, forecast_block=12, test=26\n",
      "Datos entrenamiento: 288, Prueba: 26\n",
      "Secuencias de entrenamiento: 183\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 1/50: 100%|██████████| 6/6 [00:03<00:00,  1.95batch/s, loss=0.398]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 1/50, Pérdida: 0.503399\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 2/50: 100%|██████████| 6/6 [00:01<00:00,  3.12batch/s, loss=0.23]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 2/50, Pérdida: 0.248076\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 3/50: 100%|██████████| 6/6 [00:01<00:00,  3.40batch/s, loss=0.173]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 3/50, Pérdida: 0.193589\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 4/50: 100%|██████████| 6/6 [00:01<00:00,  3.15batch/s, loss=0.197]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 4/50, Pérdida: 0.161699\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 5/50: 100%|██████████| 6/6 [00:01<00:00,  3.30batch/s, loss=0.118]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 5/50, Pérdida: 0.148416\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 6/50: 100%|██████████| 6/6 [00:01<00:00,  3.37batch/s, loss=0.116]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 6/50, Pérdida: 0.138725\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 7/50: 100%|██████████| 6/6 [00:01<00:00,  3.42batch/s, loss=0.13]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 7/50, Pérdida: 0.130649\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 8/50: 100%|██████████| 6/6 [00:01<00:00,  3.34batch/s, loss=0.113]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 8/50, Pérdida: 0.120116\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 9/50: 100%|██████████| 6/6 [00:01<00:00,  3.40batch/s, loss=0.121]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 9/50, Pérdida: 0.111017\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 10/50: 100%|██████████| 6/6 [00:01<00:00,  3.42batch/s, loss=0.0994]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 10/50, Pérdida: 0.105250\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 11/50: 100%|██████████| 6/6 [00:01<00:00,  3.38batch/s, loss=0.107]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 11/50, Pérdida: 0.099681\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 12/50: 100%|██████████| 6/6 [00:01<00:00,  3.46batch/s, loss=0.0879]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 12/50, Pérdida: 0.090986\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 13/50: 100%|██████████| 6/6 [00:01<00:00,  3.43batch/s, loss=0.0883]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 13/50, Pérdida: 0.083187\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 14/50: 100%|██████████| 6/6 [00:01<00:00,  3.28batch/s, loss=0.078]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 14/50, Pérdida: 0.075414\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 15/50: 100%|██████████| 6/6 [00:01<00:00,  3.39batch/s, loss=0.0688]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 15/50, Pérdida: 0.066950\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 16/50: 100%|██████████| 6/6 [00:01<00:00,  3.42batch/s, loss=0.0588]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 16/50, Pérdida: 0.058214\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 17/50: 100%|██████████| 6/6 [00:01<00:00,  3.38batch/s, loss=0.0499]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 17/50, Pérdida: 0.049563\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 18/50: 100%|██████████| 6/6 [00:02<00:00,  2.93batch/s, loss=0.0592]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 18/50, Pérdida: 0.045830\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 19/50: 100%|██████████| 6/6 [00:01<00:00,  3.38batch/s, loss=0.0402]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 19/50, Pérdida: 0.039257\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 20/50: 100%|██████████| 6/6 [00:01<00:00,  3.41batch/s, loss=0.039]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 20/50, Pérdida: 0.037271\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 21/50: 100%|██████████| 6/6 [00:01<00:00,  3.38batch/s, loss=0.0447]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 21/50, Pérdida: 0.035203\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 22/50: 100%|██████████| 6/6 [00:01<00:00,  3.48batch/s, loss=0.033]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 22/50, Pérdida: 0.035724\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 23/50: 100%|██████████| 6/6 [00:01<00:00,  3.46batch/s, loss=0.0498]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 23/50, Pérdida: 0.033053\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 24/50: 100%|██████████| 6/6 [00:01<00:00,  3.40batch/s, loss=0.0279]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 24/50, Pérdida: 0.031436\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 25/50: 100%|██████████| 6/6 [00:01<00:00,  3.29batch/s, loss=0.0286]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 25/50, Pérdida: 0.027776\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 26/50: 100%|██████████| 6/6 [00:01<00:00,  3.36batch/s, loss=0.0257]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 26/50, Pérdida: 0.024214\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 27/50: 100%|██████████| 6/6 [00:01<00:00,  3.34batch/s, loss=0.0159]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 27/50, Pérdida: 0.019591\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 28/50: 100%|██████████| 6/6 [00:01<00:00,  3.36batch/s, loss=0.0127]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 28/50, Pérdida: 0.017119\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 29/50: 100%|██████████| 6/6 [00:01<00:00,  3.41batch/s, loss=0.0124]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 29/50, Pérdida: 0.014547\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 30/50: 100%|██████████| 6/6 [00:01<00:00,  3.40batch/s, loss=0.0101]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 30/50, Pérdida: 0.011783\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 31/50: 100%|██████████| 6/6 [00:01<00:00,  3.38batch/s, loss=0.0102]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 31/50, Pérdida: 0.010457\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 32/50: 100%|██████████| 6/6 [00:01<00:00,  3.42batch/s, loss=0.0119]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 32/50, Pérdida: 0.009935\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 33/50: 100%|██████████| 6/6 [00:01<00:00,  3.22batch/s, loss=0.00755]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 33/50, Pérdida: 0.008559\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 34/50: 100%|██████████| 6/6 [00:01<00:00,  3.44batch/s, loss=0.00964]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 34/50, Pérdida: 0.007935\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 35/50: 100%|██████████| 6/6 [00:01<00:00,  3.42batch/s, loss=0.00563]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 35/50, Pérdida: 0.006803\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 36/50: 100%|██████████| 6/6 [00:01<00:00,  3.43batch/s, loss=0.0049]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 36/50, Pérdida: 0.006487\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 37/50: 100%|██████████| 6/6 [00:01<00:00,  3.33batch/s, loss=0.00435]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 37/50, Pérdida: 0.005458\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 38/50: 100%|██████████| 6/6 [00:01<00:00,  3.44batch/s, loss=0.00246]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 38/50, Pérdida: 0.004048\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 39/50: 100%|██████████| 6/6 [00:01<00:00,  3.37batch/s, loss=0.00322]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 39/50, Pérdida: 0.003376\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 40/50: 100%|██████████| 6/6 [00:01<00:00,  3.44batch/s, loss=0.00293]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 40/50, Pérdida: 0.002605\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 41/50: 100%|██████████| 6/6 [00:01<00:00,  3.34batch/s, loss=0.00184]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 41/50, Pérdida: 0.002034\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 42/50: 100%|██████████| 6/6 [00:01<00:00,  3.36batch/s, loss=0.00208]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 42/50, Pérdida: 0.002286\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 43/50: 100%|██████████| 6/6 [00:01<00:00,  3.38batch/s, loss=0.00205]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 43/50, Pérdida: 0.002079\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 44/50: 100%|██████████| 6/6 [00:01<00:00,  3.41batch/s, loss=0.00153]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 44/50, Pérdida: 0.001624\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 45/50: 100%|██████████| 6/6 [00:01<00:00,  3.41batch/s, loss=0.00211]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 45/50, Pérdida: 0.001682\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 46/50: 100%|██████████| 6/6 [00:01<00:00,  3.41batch/s, loss=0.0016]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 46/50, Pérdida: 0.001578\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 47/50: 100%|██████████| 6/6 [00:01<00:00,  3.42batch/s, loss=0.0015]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 47/50, Pérdida: 0.001365\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 48/50: 100%|██████████| 6/6 [00:01<00:00,  3.38batch/s, loss=0.00148]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 48/50, Pérdida: 0.001220\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 49/50: 100%|██████████| 6/6 [00:01<00:00,  3.38batch/s, loss=0.00115]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 49/50, Pérdida: 0.001098\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Epoch 50/50: 100%|██████████| 6/6 [00:01<00:00,  3.37batch/s, loss=0.000863]\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Época 50/50, Pérdida: 0.000971\n",
      "Mejor modelo cargado desde 'best_nbeats_model.pth'.\n",
      "\n",
      "Resultados para BOGOTA_SESIONES DE FISIOTERAPIA: MSE=894786.8820, RMSE=945.9318, MAE=673.5070\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1500x700 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1000x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "--- Generando predicción futura para BOGOTA_SESIONES DE FISIOTERAPIA ---\n",
      "Frecuencia inferida: W-MON\n",
      "\n",
      "Generando pronóstico futuro de 52 semanas...\n",
      "\n",
      "--- Visualizando Pronóstico Futuro ---\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1500x700 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Pronóstico guardado en: pronostico_BOGOTA_SESIONESDEFISIOTERAPIA.csv\n",
      "\n",
      "Proceso completado.\n"
     ]
    }
   ],
   "source": [
    "import torch\n",
    "import torch.nn as nn\n",
    "import torch.optim as optim\n",
    "from torch.utils.data import DataLoader, TensorDataset\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "import gc\n",
    "import os\n",
    "import time\n",
    "from tqdm import tqdm\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "# Verificar si hay GPU disponible\n",
    "device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\n",
    "print(f\"Usando dispositivo: {device}\")\n",
    "\n",
    "# --- N-BEATS Model Classes (Block, Stack, NBeatsNet) ---\n",
    "# (Estas clases permanecen sin cambios respecto a la versión anterior)\n",
    "class Block(nn.Module):\n",
    "    \"\"\"\n",
    "    Bloque N-BEATS básico\n",
    "    \"\"\"\n",
    "    def __init__(self, input_size, theta_size, hidden_layer_size, nb_layers):\n",
    "        super().__init__()\n",
    "\n",
    "        self.nb_layers = nb_layers\n",
    "        self.hidden_layer_size = hidden_layer_size\n",
    "\n",
    "        # Definición de la red de capas ocultas\n",
    "        self.layers = nn.ModuleList([nn.Linear(input_size, hidden_layer_size)])\n",
    "        for _ in range(nb_layers - 1):\n",
    "            self.layers.append(nn.Linear(hidden_layer_size, hidden_layer_size))\n",
    "\n",
    "        # Capas de salida para backcast y forecast\n",
    "        self.theta_backcast = nn.Linear(hidden_layer_size, input_size)\n",
    "        self.theta_forecast = nn.Linear(hidden_layer_size, theta_size)\n",
    "\n",
    "    def forward(self, x):\n",
    "        block_input = x\n",
    "        for layer in self.layers:\n",
    "            block_input = torch.relu(layer(block_input))\n",
    "        backcast = self.theta_backcast(block_input)\n",
    "        forecast = self.theta_forecast(block_input)\n",
    "        return backcast, forecast\n",
    "\n",
    "class Stack(nn.Module):\n",
    "    \"\"\"\n",
    "    Pila de bloques N-BEATS\n",
    "    \"\"\"\n",
    "    def __init__(self, input_size, forecast_length, hidden_layer_size, nb_blocks, nb_layers):\n",
    "        super().__init__()\n",
    "        self.forecast_length = forecast_length\n",
    "        self.blocks = nn.ModuleList([\n",
    "            Block(\n",
    "                input_size=input_size,\n",
    "                theta_size=forecast_length,\n",
    "                hidden_layer_size=hidden_layer_size,\n",
    "                nb_layers=nb_layers\n",
    "            ) for _ in range(nb_blocks)\n",
    "        ])\n",
    "\n",
    "    def forward(self, x):\n",
    "        residuals = x.clone()\n",
    "        forecast = torch.zeros(x.size(0), self.forecast_length, device=x.device)\n",
    "        for block in self.blocks:\n",
    "            backcast, block_forecast = block(residuals)\n",
    "            residuals = residuals - backcast\n",
    "            forecast = forecast + block_forecast\n",
    "        return residuals, forecast # Retorna backcast (residual) y forecast de la pila\n",
    "\n",
    "class NBeatsNet(nn.Module):\n",
    "    \"\"\"\n",
    "    Red N-BEATS completa con múltiples pilas\n",
    "    \"\"\"\n",
    "    def __init__(self, input_size, forecast_length, hidden_layer_size=128,\n",
    "                 nb_blocks_per_stack=3, nb_layers=4, nb_stacks=2):\n",
    "        super().__init__()\n",
    "        self.input_size = input_size\n",
    "        self.forecast_length = forecast_length\n",
    "        self.stacks = nn.ModuleList([\n",
    "            Stack(\n",
    "                input_size=input_size,\n",
    "                forecast_length=forecast_length,\n",
    "                hidden_layer_size=hidden_layer_size,\n",
    "                nb_blocks=nb_blocks_per_stack,\n",
    "                nb_layers=nb_layers\n",
    "            ) for _ in range(nb_stacks)\n",
    "        ])\n",
    "\n",
    "    def forward(self, x):\n",
    "        total_forecast = torch.zeros(x.size(0), self.forecast_length, device=x.device)\n",
    "        current_backcast_input = x\n",
    "        for stack in self.stacks:\n",
    "            output_backcast, stack_forecast = stack(current_backcast_input)\n",
    "            current_backcast_input = output_backcast\n",
    "            total_forecast = total_forecast + stack_forecast\n",
    "        return total_forecast\n",
    "# --- End of N-BEATS Model Classes ---\n",
    "\n",
    "\n",
    "# --- N-BEATS Trainer Class ---\n",
    "class NBeatsTrainer:\n",
    "    \"\"\"\n",
    "    Entrenador para modelo N-BEATS\n",
    "    \"\"\"\n",
    "    # <<< PARÁMETROS DE ENTRENAMIENTO AJUSTADOS EN __init__ >>>\n",
    "    def __init__(self, input_size, forecast_length, hidden_layer_size=128,\n",
    "                 nb_blocks_per_stack=3, nb_layers=4, nb_stacks=2,\n",
    "                 learning_rate=1e-5,  # <--- TASA DE APRENDIZAJE REDUCIDA\n",
    "                 batch_size=64):     # <--- TAMAÑO DE LOTE (mantener o ajustar)\n",
    "        self.input_size = input_size\n",
    "        self.forecast_length = forecast_length\n",
    "        self.batch_size = batch_size\n",
    "\n",
    "        self.model = NBeatsNet(\n",
    "            input_size=input_size,\n",
    "            forecast_length=forecast_length,\n",
    "            hidden_layer_size=hidden_layer_size,\n",
    "            nb_blocks_per_stack=nb_blocks_per_stack,\n",
    "            nb_layers=nb_layers,\n",
    "            nb_stacks=nb_stacks\n",
    "        ).to(device)\n",
    "\n",
    "        self.optimizer = optim.Adam(self.model.parameters(), lr=learning_rate)\n",
    "        self.criterion = nn.MSELoss()\n",
    "        self.scaler = StandardScaler()\n",
    "\n",
    "    def create_sequences(self, data, seq_length, forecast_length):\n",
    "        xs, ys = [], []\n",
    "        for i in range(len(data) - seq_length - forecast_length + 1):\n",
    "            x = data[i:(i + seq_length)]\n",
    "            y = data[(i + seq_length):(i + seq_length + forecast_length)]\n",
    "            xs.append(x)\n",
    "            ys.append(y)\n",
    "        if not xs: return np.array([]), np.array([])\n",
    "        return np.array(xs), np.array(ys)\n",
    "\n",
    "    def prepare_data(self, series):\n",
    "        series_np = np.array(series).reshape(-1, 1)\n",
    "        series_scaled = self.scaler.fit_transform(series_np).flatten()\n",
    "        x, y = self.create_sequences(series_scaled, self.input_size, self.forecast_length)\n",
    "\n",
    "        if x.size == 0 or y.size == 0:\n",
    "             print(f\"Advertencia: No se pudieron crear secuencias. Datos insuficientes ({len(series)} puntos) para input_size={self.input_size} y forecast_length={self.forecast_length}\")\n",
    "             return None\n",
    "\n",
    "        x_tensor = torch.FloatTensor(x).to(device)\n",
    "        y_tensor = torch.FloatTensor(y).to(device)\n",
    "        dataset = TensorDataset(x_tensor, y_tensor)\n",
    "        current_batch_size = min(self.batch_size, len(dataset))\n",
    "        if current_batch_size == 0:\n",
    "             print(f\"Advertencia: Tamaño del dataset es 0 después de crear secuencias.\")\n",
    "             return None\n",
    "        dataloader = DataLoader(dataset, batch_size=current_batch_size, shuffle=True)\n",
    "        return dataloader\n",
    "\n",
    "    # <<< PARÁMETROS DE ENTRENAMIENTO AJUSTADOS EN train >>>\n",
    "    def train(self, train_series,\n",
    "              epochs=150,      # <--- MÁS ÉPOCAS\n",
    "              patience=20):     # <--- MÁS PACIENCIA\n",
    "        \"\"\"Entrena el modelo\"\"\"\n",
    "        dataloader = self.prepare_data(train_series)\n",
    "        if dataloader is None:\n",
    "            print(\"Error: No se pudo crear el DataLoader. Entrenamiento abortado.\")\n",
    "            return []\n",
    "\n",
    "        best_loss = float('inf')\n",
    "        patience_counter = 0\n",
    "        train_losses = []\n",
    "        print(f\"Secuencias de entrenamiento: {len(dataloader.dataset)}\")\n",
    "\n",
    "        for epoch in range(epochs):\n",
    "            self.model.train()\n",
    "            epoch_losses = []\n",
    "            with tqdm(dataloader, unit=\"batch\", disable=len(dataloader) <= 1) as tepoch:\n",
    "                tepoch.set_description(f\"Epoch {epoch+1}/{epochs}\")\n",
    "                for x_batch, y_batch in tepoch:\n",
    "                    x_batch, y_batch = x_batch.to(device), y_batch.to(device)\n",
    "                    self.optimizer.zero_grad()\n",
    "                    outputs = self.model(x_batch)\n",
    "\n",
    "                    if outputs.shape != y_batch.shape:\n",
    "                        # ... (manejo de error de forma como antes) ...\n",
    "                        if outputs.numel() == y_batch.numel():\n",
    "                            try: outputs = outputs.view(y_batch.shape)\n",
    "                            except RuntimeError as e: continue\n",
    "                        else: continue\n",
    "\n",
    "                    loss = self.criterion(outputs, y_batch)\n",
    "                    loss.backward()\n",
    "                    self.optimizer.step()\n",
    "                    epoch_losses.append(loss.item())\n",
    "                    tepoch.set_postfix(loss=loss.item())\n",
    "\n",
    "            if device == torch.device('cuda'): torch.cuda.empty_cache()\n",
    "\n",
    "            if epoch_losses:\n",
    "                avg_loss = np.mean(epoch_losses)\n",
    "                train_losses.append(avg_loss)\n",
    "                print(f\"Época {epoch+1}/{epochs}, Pérdida: {avg_loss:.6f}\")\n",
    "\n",
    "                if avg_loss < best_loss:\n",
    "                    best_loss = avg_loss\n",
    "                    patience_counter = 0\n",
    "                    torch.save(self.model.state_dict(), 'best_nbeats_model.pth')\n",
    "                else:\n",
    "                    patience_counter += 1\n",
    "                if patience_counter >= patience:\n",
    "                    print(f\"Early stopping en época {epoch+1}\")\n",
    "                    break\n",
    "            else:\n",
    "                print(f\"Época {epoch+1}/{epochs} - No se calcularon pérdidas.\")\n",
    "\n",
    "        if os.path.exists('best_nbeats_model.pth'):\n",
    "            try:\n",
    "                self.model.load_state_dict(torch.load('best_nbeats_model.pth', map_location=device))\n",
    "                print(\"Mejor modelo cargado desde 'best_nbeats_model.pth'.\")\n",
    "            except Exception as e: print(f\"Error al cargar el modelo: {e}.\")\n",
    "        else: print(\"Advertencia: No se encontró 'best_nbeats_model.pth'.\")\n",
    "\n",
    "        gc.collect()\n",
    "        return train_losses\n",
    "\n",
    "    def predict(self, history, forecast_steps):\n",
    "        \"\"\"Genera predicciones (asegurándose que no sean negativas)\"\"\"\n",
    "        self.model.eval()\n",
    "        history_np = np.array(history).reshape(-1, 1)\n",
    "        try:\n",
    "            if not hasattr(self.scaler, 'mean_') or self.scaler.mean_ is None:\n",
    "                print(\"Error: El scaler no ha sido ajustado.\")\n",
    "                return np.array([])\n",
    "            history_scaled = self.scaler.transform(history_np).flatten()\n",
    "        except Exception as e:\n",
    "            print(f\"Error durante la normalización en predict: {e}\")\n",
    "            return np.array([])\n",
    "\n",
    "        if len(history_scaled) < self.input_size:\n",
    "             print(f\"Advertencia en predict: Historial escalado ({len(history_scaled)}) < input_size ({self.input_size}). Rellenando.\")\n",
    "             pad_width = self.input_size - len(history_scaled)\n",
    "             current_input_scaled = np.pad(history_scaled, (pad_width, 0), 'constant', constant_values=0)\n",
    "        else:\n",
    "             current_input_scaled = history_scaled[-self.input_size:]\n",
    "\n",
    "        x_tensor = torch.FloatTensor(current_input_scaled).unsqueeze(0).to(device)\n",
    "        all_forecasts_scaled = []\n",
    "\n",
    "        with torch.no_grad():\n",
    "            num_prediction_loops = int(np.ceil(forecast_steps / self.forecast_length))\n",
    "            for i in range(num_prediction_loops):\n",
    "                step_forecast_scaled = self.model(x_tensor)\n",
    "                step_forecast_np = step_forecast_scaled.squeeze().cpu().numpy()\n",
    "                if np.isscalar(step_forecast_np): step_forecast_np = np.array([step_forecast_np])\n",
    "                all_forecasts_scaled.extend(step_forecast_np)\n",
    "                if i == num_prediction_loops - 1: break\n",
    "                current_input_np = x_tensor.squeeze().cpu().numpy()\n",
    "                next_input_np = np.append(current_input_np[self.forecast_length:], step_forecast_np)\n",
    "                if len(next_input_np) != self.input_size:\n",
    "                     print(f\"Advertencia: Ajustando longitud de next_input_np.\")\n",
    "                     next_input_np = next_input_np[-self.input_size:]\n",
    "                x_tensor = torch.FloatTensor(next_input_np).unsqueeze(0).to(device)\n",
    "\n",
    "        final_forecast_scaled = np.array(all_forecasts_scaled[:forecast_steps])\n",
    "        try:\n",
    "            forecast = self.scaler.inverse_transform(final_forecast_scaled.reshape(-1, 1)).flatten()\n",
    "        except Exception as e:\n",
    "            print(f\"Error durante la desnormalización en predict: {e}\")\n",
    "            forecast = final_forecast_scaled\n",
    "\n",
    "        forecast = np.nan_to_num(forecast)\n",
    "        forecast[forecast < 0] = 0 # Asegurar no negativos\n",
    "        return forecast\n",
    "# --- End of N-BEATS Trainer Class ---\n",
    "\n",
    "\n",
    "# --- Training and Evaluation Function ---\n",
    "# <<< PARÁMETROS DE ENTRENAMIENTO AJUSTADOS EN LA LLAMADA A NBeatsTrainer y trainer.train >>>\n",
    "def train_and_evaluate_nbeats(serie_semanal_df, id_serie,\n",
    "                              # Parámetros de ventana (se pueden ajustar también)\n",
    "                              input_window=52, forecast_window=12, test_size=26,\n",
    "                              # Parámetros de arquitectura (se pueden ajustar también)\n",
    "                              hidden_size=256, blocks=3, layers=4, stacks=2,\n",
    "                              # Parámetros de entrenamiento (ahora con nuevos defaults)\n",
    "                              lr=1e-5, batch=64, num_epochs=150, early_patience=20):\n",
    "    \"\"\"\n",
    "    Entrena y evalúa un modelo N-BEATS para un ID_Serie específico con hiperparámetros ajustables.\n",
    "    \"\"\"\n",
    "    # --- Data Preparation ---\n",
    "    data = serie_semanal_df[serie_semanal_df['ID_Serie'] == id_serie].copy()\n",
    "    try: data['ds'] = pd.to_datetime(data['ds'])\n",
    "    except Exception as e: return None, None, None, None\n",
    "    data = data.sort_values('ds').reset_index(drop=True)\n",
    "    min_data_points = input_window + test_size\n",
    "    if len(data) < min_data_points: return None, None, None, None\n",
    "    try: y_values = data['y'].astype(float).values\n",
    "    except ValueError: return None, None, None, None\n",
    "    if np.all(y_values == y_values[0]): print(f\"ADVERTENCIA: Valores constantes en {id_serie}.\")\n",
    "\n",
    "    train_data = y_values[:-test_size]\n",
    "    test_data = y_values[-test_size:]\n",
    "    dates_test = data['ds'].values[-test_size:]\n",
    "    dates_train = data['ds'].values[:-test_size]\n",
    "\n",
    "    # --- Model Training ---\n",
    "    # Crear y entrenar el modelo con los parámetros pasados\n",
    "    trainer = NBeatsTrainer(\n",
    "        input_size=input_window,\n",
    "        forecast_length=forecast_window,\n",
    "        hidden_layer_size=hidden_size,\n",
    "        nb_blocks_per_stack=blocks,\n",
    "        nb_layers=layers,\n",
    "        nb_stacks=stacks,\n",
    "        learning_rate=lr,      # <--- Usa el learning rate pasado\n",
    "        batch_size=batch       # <--- Usa el batch size pasado\n",
    "    )\n",
    "\n",
    "    print(f\"\\nEntrenando modelo N-BEATS para {id_serie}...\")\n",
    "    print(f\"Params: lr={lr}, epochs={num_epochs}, patience={early_patience}, batch={batch}\")\n",
    "    print(f\"Arch: hidden={hidden_size}, blocks={blocks}, layers={layers}, stacks={stacks}\")\n",
    "    print(f\"Window: input={input_window}, forecast_block={forecast_window}, test={test_size}\")\n",
    "    print(f\"Datos entrenamiento: {len(train_data)}, Prueba: {len(test_data)}\")\n",
    "\n",
    "    # Entrenar usando los parámetros de épocas y paciencia pasados\n",
    "    train_losses = trainer.train(train_data, epochs=num_epochs, patience=early_patience)\n",
    "\n",
    "    # --- Prediction and Evaluation ---\n",
    "    if len(train_data) < input_window:\n",
    "         print(f\"Advertencia: Datos de entrenamiento insuficientes para predecir.\")\n",
    "         return trainer, None, test_data, None\n",
    "\n",
    "    predictions = trainer.predict(train_data, forecast_steps=test_size)\n",
    "\n",
    "    if len(predictions) != len(test_data):\n",
    "        print(f\"Advertencia: Longitud de predicción no coincide con test_data. Ajustando.\")\n",
    "        min_len = min(len(predictions), len(test_data))\n",
    "        predictions = predictions[:min_len]\n",
    "        test_data = test_data[:min_len]\n",
    "        dates_test = dates_test[:min_len]\n",
    "\n",
    "    if len(predictions) == 0:\n",
    "         print(\"Error: No se generaron predicciones válidas.\")\n",
    "         return trainer, None, test_data, None\n",
    "\n",
    "    # Calcular métricas\n",
    "    mse = np.mean((predictions - test_data) ** 2)\n",
    "    rmse = np.sqrt(mse)\n",
    "    mae = np.mean(np.abs(predictions - test_data))\n",
    "    print(f\"\\nResultados para {id_serie}: MSE={mse:.4f}, RMSE={rmse:.4f}, MAE={mae:.4f}\")\n",
    "\n",
    "    # --- Visualization ---\n",
    "    plt.figure(figsize=(15, 7))\n",
    "    plot_train_start_idx = max(0, len(dates_train) - 2 * input_window)\n",
    "    plt.plot(dates_train[plot_train_start_idx:], train_data[plot_train_start_idx:], 'b-', label='Histórico (Entrenamiento)')\n",
    "    plt.plot(dates_test, test_data, 'k-', linewidth=2, label='Real (Prueba)')\n",
    "    plt.plot(dates_test, predictions, 'r--', linewidth=2, label='Predicción N-BEATS')\n",
    "    plt.title(f'Predicción vs Real para {id_serie} (RMSE: {rmse:.2f})')\n",
    "    plt.xlabel('Fecha (Semana)'); plt.ylabel('Valor (y)')\n",
    "    plt.legend(); plt.grid(True); plt.xticks(rotation=45); plt.tight_layout(); plt.show()\n",
    "\n",
    "    if train_losses:\n",
    "        plt.figure(figsize=(10, 4))\n",
    "        plt.plot(train_losses)\n",
    "        plt.title(f'Pérdida durante entrenamiento para {id_serie}')\n",
    "        plt.xlabel('Época'); plt.ylabel('Pérdida (MSE)')\n",
    "        plt.grid(True); plt.show()\n",
    "\n",
    "    # Liberar memoria\n",
    "    preds_to_return = predictions.copy()\n",
    "    actuals_to_return = test_data.copy()\n",
    "    del data, train_data, test_data, y_values, predictions\n",
    "    gc.collect()\n",
    "    if device == torch.device('cuda'): torch.cuda.empty_cache()\n",
    "\n",
    "    return trainer, preds_to_return, actuals_to_return, rmse\n",
    "# --- End of Training and Evaluation Function ---\n",
    "\n",
    "\n",
    "# --- Future Forecasting Function ---\n",
    "# (Esta función permanece sin cambios respecto a la versión anterior)\n",
    "def multi_step_forecast(trainer, history_values, history_dates, periods_to_forecast=52, freq='W-MON'):\n",
    "    \"\"\"Genera una predicción multi-paso para varios períodos en el futuro.\"\"\"\n",
    "    if trainer is None: return None\n",
    "    if len(history_values) < trainer.input_size: return None\n",
    "    print(f\"\\nGenerando pronóstico futuro de {periods_to_forecast} semanas...\")\n",
    "    forecast_values = trainer.predict(history_values, forecast_steps=periods_to_forecast)\n",
    "    if len(forecast_values) == 0: return None\n",
    "    try:\n",
    "        last_date = pd.to_datetime(history_dates).max()\n",
    "        future_dates = pd.date_range(start=last_date + pd.Timedelta(weeks=1), periods=periods_to_forecast, freq=freq)\n",
    "    except Exception as e: return None\n",
    "    if len(forecast_values) != len(future_dates):\n",
    "        min_len = min(len(forecast_values), len(future_dates))\n",
    "        forecast_values = forecast_values[:min_len]\n",
    "        future_dates = future_dates[:min_len]\n",
    "    forecast_df = pd.DataFrame({'ds': future_dates,'forecast': forecast_values})\n",
    "    return forecast_df\n",
    "# --- End of Future Forecasting Function ---\n",
    "\n",
    "\n",
    "try:\n",
    "    if 'serie_semanal' not in locals():\n",
    "         print(f\"Intentando cargar '{CSV_FILENAME}'...\")\n",
    "         serie_semanal = pd.read_csv(CSV_FILENAME)\n",
    "         print(\"DataFrame 'serie_semanal' cargado.\")\n",
    "\n",
    "    required_cols = ['y', 'ds', 'ID_Serie']\n",
    "    missing_cols = [col for col in required_cols if col not in serie_semanal.columns]\n",
    "    if missing_cols: raise ValueError(f\"Error: Faltan columnas: {missing_cols}\")\n",
    "\n",
    "    if not pd.api.types.is_numeric_dtype(serie_semanal['y']):\n",
    "        print(\"Convirtiendo 'y' a numérico...\")\n",
    "        serie_semanal['y'] = pd.to_numeric(serie_semanal['y'], errors='coerce')\n",
    "        nan_count = serie_semanal['y'].isna().sum()\n",
    "        if nan_count > 0:\n",
    "            print(f\"Rellenando {nan_count} NaNs en 'y' con 0.\")\n",
    "            serie_semanal['y'] = serie_semanal['y'].fillna(0)\n",
    "\n",
    "except FileNotFoundError: print(f\"Error: Archivo '{CSV_FILENAME}' no encontrado.\"); exit()\n",
    "except ValueError as ve: print(ve); exit()\n",
    "except Exception as e: print(f\"Error inesperado: {e}\"); exit()\n",
    "\n",
    "\n",
    "# --- Entrenamiento para una serie específica ---\n",
    "id_series_unicas = serie_semanal['ID_Serie'].unique()\n",
    "\n",
    "if len(id_series_unicas) == 0:\n",
    "    print(\"No se encontraron ID_Serie únicas.\")\n",
    "else:\n",
    "    indice_elegido = 2406 # Elige qué serie procesar (0 es la primera)\n",
    "    if indice_elegido < len(id_series_unicas):\n",
    "        id_serie_elegida = id_series_unicas[indice_elegido]\n",
    "        print(f\"\\n========================================================\")\n",
    "        print(f\"Procesando ID_Serie: {id_serie_elegida} (Índice: {indice_elegido})\")\n",
    "        print(f\"========================================================\")\n",
    "\n",
    "        # --- AJUSTA AQUÍ LOS PARÁMETROS SI DESEAS EXPERIMENTAR ---\n",
    "        # Parámetros de Ventana\n",
    "        INPUT_WEEKS = 94\n",
    "        FORECAST_BLOCK = 12 # Tamaño interno de predicción NBEATS\n",
    "        TEST_WEEKS = 26\n",
    "\n",
    "        # Parámetros de Arquitectura\n",
    "        HIDDEN_SIZE = 1024   # Neuronas por capa oculta\n",
    "        N_BLOCKS = 18        # Bloques por pila\n",
    "        N_LAYERS = 8        # Capas por bloque\n",
    "        N_STACKS = 4        # Número de pilas\n",
    "\n",
    "        # Parámetros de Entrenamiento (Ya ajustados en NBeatsTrainer y train_and_evaluate_nbeats)\n",
    "        LEARNING_RATE = 3e-4  # Tasa de aprendizaje más baja\n",
    "        BATCH_SIZE = 32\n",
    "        NUM_EPOCHS = 50    # Más épocas\n",
    "        PATIENCE = 10       # Más paciencia\n",
    "\n",
    "        # Entrenar y evaluar modelo\n",
    "        trainer, preds, actuals, rmse = train_and_evaluate_nbeats(\n",
    "            serie_semanal_df=serie_semanal,\n",
    "            id_serie=id_serie_elegida,\n",
    "            # Pasa los parámetros definidos arriba\n",
    "            input_window=INPUT_WEEKS,\n",
    "            forecast_window=FORECAST_BLOCK,\n",
    "            test_size=TEST_WEEKS,\n",
    "            hidden_size=HIDDEN_SIZE,\n",
    "            blocks=N_BLOCKS,\n",
    "            layers=N_LAYERS,\n",
    "            stacks=N_STACKS,\n",
    "            lr=LEARNING_RATE,\n",
    "            batch=BATCH_SIZE,\n",
    "            num_epochs=NUM_EPOCHS,\n",
    "            early_patience=PATIENCE\n",
    "        )\n",
    "\n",
    "        # --- Predicción Futura ---\n",
    "        if trainer is not None and preds is not None:\n",
    "            print(f\"\\n--- Generando predicción futura para {id_serie_elegida} ---\")\n",
    "            data_serie = serie_semanal[serie_semanal['ID_Serie'] == id_serie_elegida].copy()\n",
    "            try:\n",
    "                data_serie['ds'] = pd.to_datetime(data_serie['ds'])\n",
    "                data_serie = data_serie.sort_values('ds').reset_index(drop=True)\n",
    "            except Exception as e: forecast_df = None\n",
    "            else:\n",
    "                history_values = data_serie['y'].astype(float).values\n",
    "                history_dates = data_serie['ds'].values\n",
    "                WEEKS_TO_FORECAST = 52 # Semanas a predecir\n",
    "\n",
    "                data_freq = pd.infer_freq(data_serie['ds'])\n",
    "                if data_freq is None:\n",
    "                    # ... (lógica de inferencia de frecuencia como antes) ...\n",
    "                    data_freq = 'W-MON' # Default si falla la inferencia\n",
    "                    print(f\"Usando frecuencia default: {data_freq}\")\n",
    "                else: print(f\"Frecuencia inferida: {data_freq}\")\n",
    "\n",
    "                forecast_df = multi_step_forecast(trainer, history_values, history_dates,\n",
    "                                                  periods_to_forecast=WEEKS_TO_FORECAST, freq=data_freq)\n",
    "\n",
    "            if forecast_df is not None:\n",
    "                print(\"\\n--- Visualizando Pronóstico Futuro ---\")\n",
    "                plt.figure(figsize=(15, 7))\n",
    "                plt.plot(data_serie['ds'], data_serie['y'], 'b-', label='Histórico Completo')\n",
    "                plt.plot(forecast_df['ds'], forecast_df['forecast'], 'r--', label=f'Pronóstico N-BEATS ({WEEKS_TO_FORECAST} Semanas)')\n",
    "                start_2025 = pd.Timestamp('2025-01-01')\n",
    "                plot_start_date = data_serie['ds'].min() if not data_serie.empty else pd.Timestamp.now()\n",
    "                plot_end_date = forecast_df['ds'].max() if not forecast_df.empty else pd.Timestamp.now()\n",
    "                if plot_start_date <= start_2025 <= plot_end_date:\n",
    "                     plt.axvline(start_2025, color='grey', linestyle=':', linewidth=2, label='Inicio 2025')\n",
    "                plt.title(f'Pronóstico para {id_serie_elegida} - Próximas {WEEKS_TO_FORECAST} Semanas')\n",
    "                plt.xlabel('Fecha (Semana)'); plt.ylabel('Valor (y)')\n",
    "                plt.legend(); plt.grid(True); plt.xticks(rotation=45); plt.tight_layout(); plt.show()\n",
    "\n",
    "                try:\n",
    "                    safe_id = \"\".join([c for c in id_serie_elegida if c.isalnum() or c in ('_')]).rstrip()\n",
    "                    forecast_filename = f'pronostico_{safe_id}.csv'\n",
    "                    forecast_df.to_csv(forecast_filename, index=False)\n",
    "                    print(f\"Pronóstico guardado en: {forecast_filename}\")\n",
    "                except Exception as e: print(f\"Error al guardar el pronóstico: {e}\")\n",
    "        else:\n",
    "            print(f\"\\nNo se pudo entrenar/predecir para {id_serie_elegida}.\")\n",
    "    else:\n",
    "        print(f\"Índice ({indice_elegido}) fuera de rango para {len(id_series_unicas)} series.\")\n",
    "\n",
    "print(\"\\nProceso completado.\")"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "nvidiaTeslaT4",
   "dataSources": [
    {
     "datasetId": 7106542,
     "sourceId": 11355674,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 7166865,
     "sourceId": 11440834,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 7177140,
     "sourceId": 11454624,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 7177156,
     "sourceId": 11454642,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30918,
   "isGpuEnabled": true,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 553.124626,
   "end_time": "2025-04-25T05:12:43.573182",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2025-04-25T05:03:30.448556",
   "version": "2.6.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
